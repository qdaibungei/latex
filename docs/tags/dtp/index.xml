<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DTP on 文藝部LaTeX研究会</title>
    <link>https://qdaibungei.github.io/latex/tags/dtp/</link>
    <description>Recent content in DTP on 文藝部LaTeX研究会</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 13 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://qdaibungei.github.io/latex/tags/dtp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ベスト文集制作記録⑪（入稿）</title>
      <link>https://qdaibungei.github.io/latex/documents/2020-04-13-latexnovel/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2020-04-13-latexnovel/</guid>
      <description>最後に、印刷所に入稿する際の注意事項を述べる。
入稿時の注意事項 紙の種類 入稿するとき、本文に使用する紙の種類が選べる。このとき重要なのは、書籍用紙やクリームキンマリなどのほんのり茶色がかった色の紙を選ぶことだ。いくら値段が安いからといって、上質紙（真っ白な色をした紙）を選んではならない。
市販の文庫本や単行本を見よ。コピー用紙のように真っ白な紙は、普通、使われていないのである。書籍用紙やクリームキンマリなど、長文を読むのに適した紙を選ぶことが何より大事である。
断ち切り 印刷用語に「断ち切り」というのがある。知らない人は、ポプルスのサイト内の記事「■綺麗な本にするためには「断ち切り」が大事？」などを参照のこと。
この断ち切りに関連して、二つの注意事項がある。
表紙担当に断ち切りのことを伝えよ 表紙担当が断ち切りのことを把握しているとは限らない。むしろ、把握していないことのほうが多い。表紙作成を依頼する際には、担当者にしっかりと断ち切りのことを伝えること。例えば、A5サイズの本を作るときには、表紙はA5よりも一回り大きなサイズ（上下左右にプラス3mmほど）で作ってもらおう。
また、表紙に文字を入れたいときもあるだろう。このとき文字が表紙の端っこすぎると文字が切れてしまうことがあるので、少し内側に寄せるほうが安全である。このことも表紙担当には伝えておきたい。
本文の断ち切りを作るのを忘れぬように 普通のレイアウトでは本文には断ち切りは要らない。しかし、紙の端まで印刷したい場合は、本文データにも断ち切り部分を作る必要がある。今回のベスト文集も、断ち切りが必要なデザインであった。
私の場合、「断ち切りを作るべし」ということ自体は覚えていても、編集時にはレイアウト確認のため断ち切りなしバージョンで作業していることが多く、その結果、入稿時にも間違えて断ち切りなしバージョンでデータ送信してしまうことがある。入稿時には断ち切りを作るのを忘れぬよう注意したい。
よくある凡ミス よくある凡ミスを列挙しておこう。これらは、入稿前にいま一度チェックしておきたい。
 他人のペンネームを間違える（特にその人が複数のペンネームを持っている場合） 目次で作品タイトルを間違える 柱で作品タイトルを間違える 奥付の情報を間違える（特に年月日）  このなかでも近年文藝部内で目立つのが、「柱で作品タイトルを間違える」ミスである1。私はLaTeXを用いているのでこの類のミスはしたことがないのだが、Wordで編集している場合、このミスが多発する。気をつけよう。
跋 以上、ベスト文集制作の主に技術的な側面を記述してきた。次期ベスト文集の編集人の健闘を祈る。
  「柱」というのは何かというと、本には普通、各ページに小さく作品タイトルや章タイトルが書いてあると思うが、その小さく書かれたタイトルのことである。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
   </description>
    </item>
    
    <item>
      <title>ベスト文集制作記録⑩（奥付）</title>
      <link>https://qdaibungei.github.io/latex/documents/2020-04-12-latexnovel/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2020-04-12-latexnovel/</guid>
      <description>奥付 奥付は次のようなデザインにした1。奥付でもやはり書籍タイトルに廻想体を使い、統一感を出した。
LaTeXでは次のように実現してある。
%% macro for colophon \makeatletter \def\@thisdate#1/#2/#3/#4\@nil{%  \newcommand{\thisyear}{#1}%  \newcommand{\thismonth}{#2}%  \newcommand{\thisday}{#3}% } \def\thisdate#1{\expandafter\@thisdate#1//\@nil} \newcommand{\bookmaker}[2]{%  ■\leavevmode\hbox to 2.7zw{%  {\gtfamily\bfseries\fontsizeX #1}%  }%  ―\kern-.7zw\――#2% } \newcommand{\fontcredit}[2]{%  \leavevmode\hbox to 6zw{%  \hfill\emph{#1}%  }%  {\kern1.5zw\okfamily #2}% } \makeatother %% colophon \newhanmen{Q=11.5,H=19,W=58,L=21,ko=2mm,koguchi=\relax,nodo=\relax,chi=16.4375mm,tate} % \pagegridon{g=56} \thispagestyle{empty} \columnsep=4zw \begin{multicols*}{2} \parbox&amp;lt;y&amp;gt;[c]{\textheight}{%  \fontcredit{組版処理}{\LaTeXe}\\ \fontcredit{使用書体}{}{\raise-.125zw\hbox{\gtfamily\ebseries\fontsize{14\bQ}{19H}\selectfont \kern-.1zw 廻\kern-.25zw 想\kern-.25zw 体}＋{\agencyfb Agency FB}\fontsizeVIII 〈表紙〉}\\ \fontcredit{}{\raise-.125zw\hbox{\gtfamily\ebseries\fontsize{14\bQ}{19H}\selectfont \kern-.1zw 廻\kern-.25zw 想\kern-.25zw 体}＋{\classico Classico}\fontsizeVIII 〈ロゴ〉}\\ \fontcredit{}{{\mcfamily 游明朝体R＋Cochineal}\fontsizeVIII 〈本文・ルビ・柱〉}\\ \fontcredit{}{游明朝体五号かなR＋fbb\fontsizeVIII 〈本文〉}\\ \fontcredit{}{{\mgfamily 筑紫Aオールド明朝R}＋fbb\fontsizeVIII 〈各作品タイトル〉}\\ \fontcredit{}{{\gtfamily 游ゴシック体M}＋\textgt{Open Sans Regular}\fontsizeVIII 〈見出し・作品情報〉}\\ \fontcredit{}{\emph{筑紫ゴシックD}＋\emph{Open Sans Semibold}\fontsizeVIII 〈強調・小見出し〉}\\ \fontcredit{}{\texttt{Nimbus15 Mono Narrow}\fontsizeVIII 〈作品情報〉}\\ \fontcredit{}{源暎ノンブル\fontsizeVIII 〈ノンブル〉} } \columnbreak \thisdate{2019/10/04} \leftskip=-6zw \okfamily \vspace*{.</description>
    </item>
    
    <item>
      <title>ベスト文集制作記録⑨（著者コメント欄）</title>
      <link>https://qdaibungei.github.io/latex/documents/2020-04-11-latexnovel/</link>
      <pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2020-04-11-latexnovel/</guid>
      <description>著者コメント欄 ベスト文集の終わりのほうに、著者コメント欄を設けた。
版面設定は次のようにした。見開きに収めたかったので、文字サイズは10.5Qとかなり小さめ。
\newhanmen{Q=10.5,H=15.75,W=66.5,L=29,tate,ko=0mm,te=0mm,nodo=\relax,koguchi=14.625mm,chi=16.4375mm,footskip=3.25mm} 「著者コメント」とあるタイトル部分は、次のコードにより出力した。
\fboxsep=.25zw \definecolor{creditgray}{gray}{0.1} \colorbox{creditgray}{\emph{\color{white}~著者コメント}}{\color{creditgray}\rule[-.75zw]{59.75zw}{1.5zw}} 　（次回に続く）</description>
    </item>
    
    <item>
      <title>ベスト文集制作記録⑧（本文の組み方⑤・作品タイトル篇）</title>
      <link>https://qdaibungei.github.io/latex/documents/2020-04-10-latexnovel/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2020-04-10-latexnovel/</guid>
      <description>本文の組み方⑤・作品タイトル篇 デザイン 作品タイトルは以下のようなデザインとした。紙面を節約するために、タイトルを本文の右隣りに置くデザインとした。
LaTeXによる章の作り方（通常時） 普通、LaTeXで作品タイトルや章タイトルを出力するには、\chapterという命令を使う。\chapter{作品タイトル}のようにすればよい。
しかし今回は、\chapterに代替しうるマクロを独自に定義してこれを使った。なぜかというと、\chapterの定義を変更してデザインを変えるのが面倒であったからだ。LaTeXにもう少し詳しければ\chapterを再定義して用いたほうがよいであろう。
LaTeXによる章の作り方（私家版） 上のような作品タイトルの出力をLaTeXで実現するために、次のようなマクロを組んだ。
%% title &amp;amp; author names \newcommand{\booktitlename}{\relax} \newcommand{\chaptertitle}[1]{\def\qbook@chaptertitle{#1}} \newcommand{\chapterauthor}[1]{\def\qbook@chapterauthor{#1}} \newcommand{\chapterauthorruby}[1]{\def\qbook@chapterauthorruby{#1}} \newcommand{\chapterfirstappearance}[1]{\expandafter\qbook@fa#1//\@nil} \def\qbook@fa#1/#2/#3/#4\@nil{%  \def\qbook@fa@year{#1}%  \def\qbook@fa@gou{#2}%  \def\qbook@fa@booktitle{#3}% } \chaptertitle{\relax} \chapterauthor{\relax} \chapterauthorruby{\relax} \chapterfirstappearance{\relax/\relax/\relax} %% \makechapter % \let\qbook@orig@tcy=\tcy \def\qbook@5gyobox#1{\leavevmode\hbox to 5\baselineskip{\yoko#1\hfill}} \def\qbook@makechapter{%  \begingroup \ifnum\value{dangumi}=1 \hspace*{-4.5zw}%  \fi \qbook@5gyobox{\rule{70mm}{.4mm}} \qbook@5gyobox{\fontsize{12\bQ}{12H}\agencyfb The BEST SELECTION of\phantom{y}}\kern.05em \qbook@5gyobox{\fontsize{12\bQ}{12H}\agencyfb Kyushu University}\kern.05em \qbook@5gyobox{\fontsize{12\bQ}{12H}\agencyfb Literary Club}\kern.05em \qbook@5gyobox{\fontsize{12\bQ}{12H}\agencyfb Works} \qbook@5gyobox{\rule{70mm}{.4mm}} \begingroup \kanjiskip=-2H plus 0zw minus 0zw {\hskip2zw\fontsize{35\bQ}{35H}\selectfont\parbox{16zw}{\mgfamily\romanfamily{fbb-TLF}\selectfont\qbook@chaptertitle}}\par \endgroup \vspace{-.08\baselineskip} \hfill\leavevmode\hbox to 0pt{\yoko{\fontsize{8\bQ}{8H}\ttfamily Author:\phantom{y}}\hfill}\kern.</description>
    </item>
    
    <item>
      <title>ベスト文集制作記録⑦（本文の組み方④・テキストからTeXへ変換する篇）</title>
      <link>https://qdaibungei.github.io/latex/documents/2020-04-09-latexnovel/</link>
      <pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2020-04-09-latexnovel/</guid>
      <description>本文の組み方④・テキストからTeXへ変換する篇 ダッシュ 倍角ダッシュや波ダッシュは、jdash.styを用いてマクロ定義してある。このマクロを使うため、次のように置換処理を行なう。
jdashes = [&amp;#39;—&amp;#39;,&amp;#39;―&amp;#39;,&amp;#39;─&amp;#39;] wdashes = [&amp;#39;〜&amp;#39;,&amp;#39;～&amp;#39;] def jdash_replace(x): for jdash in jdashes: if x.find(jdash) &amp;gt; -1: for y in range(30,2,-1): x = x.replace(jdash*y,&amp;#39;{\\jdash[&amp;#39;+str(y)+&amp;#39;]&amp;#39;+&amp;#39;}&amp;#39;) x = x.replace(jdash*2,&amp;#39;\\――&amp;#39;) return x def wdash_replace(x): for wdash in wdashes: if x.find(wdash) &amp;gt; -1: for y in range(20,1,-1): x = re.sub(wdash*y,(&amp;#39;\\&amp;#39;+wdash)*y,x) return x 濁点マクロ 例えば、平仮名の「な」に濁点を打ちたくなることがある。このような場合には濁点マクロを作っておくと便利だ。
LaTeXでのマクロ定義 %% dakutens \newcommand{\dakuten}[1]{%  \jghostguarded{%  \leavevmode\hbox to 1zw{%  \rensuji{\hbox to 1zw{#1\hspace*{-0.25zw}゛}}%  }%  }% } \newcommand{\handakuten}[1]{%  \jghostguarded{%  \leavevmode\hbox to 1zw{%  \rensuji{\hbox to 1zw{#1\hspace*{-0.</description>
    </item>
    
    <item>
      <title>ベスト文集制作記録⑥（本文の組み方③・ベタ組篇）</title>
      <link>https://qdaibungei.github.io/latex/documents/2020-04-08-latexnovel/</link>
      <pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2020-04-08-latexnovel/</guid>
      <description>本文の組み方③・ベタ組篇 小説の本文は、ベタ組にするのがよい。ベタ組とは、方眼紙に字を埋めるがごとく、字間を空けずに組むことである。次の画像のように組むということである。
hanmen.styの使用 LaTeXの標準機能でベタ組を実現するのは案外難しい。そこで、hanmen.styを使用する。これを用いると、ベタ組を実現しやすい。
ベタ組のための基本設定 次の設定をしておくと字間や行間が広がりにくく、ベタ組を実現しやすい。
%% 字間・行間の設定 \kanjiskip=0zw plus .25zw minus .03125zw \xkanjiskip=.25zw plus .25zw minus .0625zw \parskip=0zw \parsep=0zw \partopsep=0zw 縦中横 LaTeXで縦書きをする際、縦中横には\rensujiを使うよう言われる。しかし\rensujiだと無駄に\xkanjiskipが挿入されてしまい、ベタ組にならない。そこで\tcy命令を新たに作り、これを使うのがよい。
\usepackage{pxghost} %% \tcy \newcommand{\tcy}[1]{%  \jghostguarded{%  \leavevmode\hbox to 1zw{%  \centering\rensuji*{#1}%  }%  }% } 数字やアルファベットを自動で縦中横にするために、『九大文学』製作時にはPythonで次の関数を作って置換した。
nums = [ [&amp;#39;０&amp;#39;,&amp;#39;0&amp;#39;],[&amp;#39;１&amp;#39;,&amp;#39;1&amp;#39;],[&amp;#39;２&amp;#39;,&amp;#39;2&amp;#39;],[&amp;#39;３&amp;#39;,&amp;#39;3&amp;#39;],[&amp;#39;４&amp;#39;,&amp;#39;4&amp;#39;], [&amp;#39;５&amp;#39;,&amp;#39;5&amp;#39;],[&amp;#39;６&amp;#39;,&amp;#39;6&amp;#39;],[&amp;#39;７&amp;#39;,&amp;#39;7&amp;#39;],[&amp;#39;８&amp;#39;,&amp;#39;8&amp;#39;],[&amp;#39;９&amp;#39;,&amp;#39;9&amp;#39;] ] alphabets = [ [&amp;#39;Ａ&amp;#39;,&amp;#39;A&amp;#39;],[&amp;#39;Ｂ&amp;#39;,&amp;#39;B&amp;#39;],[&amp;#39;Ｃ&amp;#39;,&amp;#39;C&amp;#39;],[&amp;#39;Ｄ&amp;#39;,&amp;#39;D&amp;#39;],[&amp;#39;Ｅ&amp;#39;,&amp;#39;E&amp;#39;], [&amp;#39;Ｆ&amp;#39;,&amp;#39;F&amp;#39;],[&amp;#39;Ｇ&amp;#39;,&amp;#39;G&amp;#39;],[&amp;#39;Ｈ&amp;#39;,&amp;#39;H&amp;#39;],[&amp;#39;Ｉ&amp;#39;,&amp;#39;I&amp;#39;],[&amp;#39;Ｊ&amp;#39;,&amp;#39;J&amp;#39;], [&amp;#39;Ｋ&amp;#39;,&amp;#39;K&amp;#39;],[&amp;#39;Ｌ&amp;#39;,&amp;#39;L&amp;#39;],[&amp;#39;Ｍ&amp;#39;,&amp;#39;M&amp;#39;],[&amp;#39;Ｎ&amp;#39;,&amp;#39;N&amp;#39;],[&amp;#39;Ｏ&amp;#39;,&amp;#39;O&amp;#39;], [&amp;#39;Ｐ&amp;#39;,&amp;#39;P&amp;#39;],[&amp;#39;Ｑ&amp;#39;,&amp;#39;Q&amp;#39;],[&amp;#39;Ｒ&amp;#39;,&amp;#39;R&amp;#39;],[&amp;#39;Ｓ&amp;#39;,&amp;#39;S&amp;#39;],[&amp;#39;Ｔ&amp;#39;,&amp;#39;T&amp;#39;], [&amp;#39;Ｕ&amp;#39;,&amp;#39;U&amp;#39;],[&amp;#39;Ｖ&amp;#39;,&amp;#39;V&amp;#39;],[&amp;#39;Ｗ&amp;#39;,&amp;#39;W&amp;#39;],[&amp;#39;Ｘ&amp;#39;,&amp;#39;X&amp;#39;],[&amp;#39;Ｙ&amp;#39;,&amp;#39;Y&amp;#39;], [&amp;#39;Ｚ&amp;#39;,&amp;#39;Z&amp;#39;], [&amp;#39;ａ&amp;#39;,&amp;#39;a&amp;#39;],[&amp;#39;ｂ&amp;#39;,&amp;#39;b&amp;#39;],[&amp;#39;ｃ&amp;#39;,&amp;#39;c&amp;#39;],[&amp;#39;ｄ&amp;#39;,&amp;#39;d&amp;#39;],[&amp;#39;ｅ&amp;#39;,&amp;#39;e&amp;#39;], [&amp;#39;ｆ&amp;#39;,&amp;#39;f&amp;#39;],[&amp;#39;ｇ&amp;#39;,&amp;#39;g&amp;#39;],[&amp;#39;ｈ&amp;#39;,&amp;#39;h&amp;#39;],[&amp;#39;ｉ&amp;#39;,&amp;#39;i&amp;#39;],[&amp;#39;ｊ&amp;#39;,&amp;#39;j&amp;#39;], [&amp;#39;ｋ&amp;#39;,&amp;#39;k&amp;#39;],[&amp;#39;ｌ&amp;#39;,&amp;#39;l&amp;#39;],[&amp;#39;ｍ&amp;#39;,&amp;#39;m&amp;#39;],[&amp;#39;ｎ&amp;#39;,&amp;#39;n&amp;#39;],[&amp;#39;ｏ&amp;#39;,&amp;#39;o&amp;#39;], [&amp;#39;ｐ&amp;#39;,&amp;#39;p&amp;#39;],[&amp;#39;ｑ&amp;#39;,&amp;#39;q&amp;#39;],[&amp;#39;ｒ&amp;#39;,&amp;#39;r&amp;#39;],[&amp;#39;ｓ&amp;#39;,&amp;#39;s&amp;#39;],[&amp;#39;ｔ&amp;#39;,&amp;#39;t&amp;#39;], [&amp;#39;ｕ&amp;#39;,&amp;#39;u&amp;#39;],[&amp;#39;ｖ&amp;#39;,&amp;#39;v&amp;#39;],[&amp;#39;ｗ&amp;#39;,&amp;#39;w&amp;#39;],[&amp;#39;ｘ&amp;#39;,&amp;#39;x&amp;#39;],[&amp;#39;ｙ&amp;#39;,&amp;#39;y&amp;#39;], [&amp;#39;ｚ&amp;#39;,&amp;#39;z&amp;#39;] ] def alphabet_replace(s): for x in alphabets: s = s.</description>
    </item>
    
    <item>
      <title>ベスト文集制作記録⑤（本文の組み方②・版面設計篇）</title>
      <link>https://qdaibungei.github.io/latex/documents/2020-04-07-latexnovel/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2020-04-07-latexnovel/</guid>
      <description>本文の組み方②・版面設計篇 各種パラメータ 紙サイズ 今回はA5サイズを使用した。A5サイズは、文庫サイズなどに比べて安く作れるので、同人誌界隈ではよく使用される。文藝部にはそこまでお金がないので、今回もA5サイズ以外に選択の余地はなかった。
文字サイズ 『九大文学』では、文字サイズは13Qとした1。13Qくらいが、大きすぎず小さすぎず、ちょうどよい塩梅ではあるまいか。
初心者は文字サイズを小さくして失敗してしまいがちなので、注意すること。印刷所に入稿する前に、家庭用プリンターで本文を印刷してみて、どれくらいの文字サイズになっているかを確認するのが最も安全である。
行送り 行送りは、19.5Hとした。これは、文字サイズの1.5倍である（それゆえ行間は文字サイズの0.5倍である）。これは、行間の設定としてはかなり狭めである。一般には、行送りは文字サイズの1.5〜2倍程度がよいとされている。
なお、フォントによって、行送りを広く取ったほうがよいもの、狭くても読みやすいものがある。したがって行送りはフォントを選んだ後に決めるべきであろう。今回は游明朝だから行送りを狭めにしたが、例えばヒラギノ明朝であればもう少し広めに取ったほうがよい。
行長・行数 行長は26字、行数は24行とした。二段組とし、段間は2.5字分とした。
ノド ノド側の余白を狭くしすぎると、文字が食われてしまって読みづらい。A5で縦書きの場合、ノドの広さは約20mmは欲しい2。今回は、ノドは18mm取った。
LaTeXでの実現方法 まとめると、版面は次のような設定にしたことになる。
 紙はA5サイズ 文字サイズ13Q 行送り19.5H 26字×24行×2段組 段間2.5字分 ノドの広さは18mm  これは、「頁数節約のため一頁あたりの文字数を多めにしつつ、最大限、可読性も確保する」というコンセプトのもとで、幾度も調整を重ねて設計したものである。
具体的には次のように記述してLaTeXで実現している（細かい解説は面倒なので割愛）。
%% ドキュメントクラス読み込み時にA5サイズ指定 \documentclass[a5paper,autodetect-engine]{jsbook} \usepackage[tate]{hanmen} %% papersize \AtBeginDvi{\special{papersize=\the\paperwidth,\the\paperheight}}% 通常 % 本文に上下左右3mmの塗り足しを作る細工 % \newdimen\stockwidth % \newdimen\stockheight % \setlength{\stockwidth}{\paperwidth} % \setlength{\stockheight}{\paperheight} % \advance\stockwidth by 6mm % \advance\stockheight by 6mm % \advance\voffset by 3mm % \advance\hoffset by 3mm % \AtBeginDvi{\special{papersize=\the\stockwidth,\the\stockheight}}  %% layout \newcounter{dangumi} \setcounter{dangumi}{0} \newcommand{\newhanmenI}{%  % H = ((19.</description>
    </item>
    
    <item>
      <title>ベスト文集制作記録④（本文の組み方①・フォント篇）</title>
      <link>https://qdaibungei.github.io/latex/documents/2020-04-06-latexnovel/</link>
      <pubDate>Mon, 06 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2020-04-06-latexnovel/</guid>
      <description>ここからは小説誌の血肉とも言うべき本文の組み方について述べる。
本文の組み方①・フォント篇 まずはフォントの選定である。フォントは小説向きのものを選ぶこと、これが鉄則である。小説向きのフォントとは、例えば次のようなフォントを言う。
 游明朝 ヒラギノ明朝 しっぽり明朝v2 源暎こぶり明朝 筑紫明朝  以下、各々のフォントについて簡単に解説する。
游明朝 游明朝は最も小説向きであると言えよう。癖がなく、上品で、読みやすい。しかも公式サイトには次のように書いてあり、小説用に開発されたフォントであることが明言されている。
 游明朝体ファミリーは「時代小説が組めるような明朝体」をキーワードに、単行本や文庫などで小説を組むことを目的に開発した游明朝体Rを核とした明朝体ファミリーです。
 游明朝は現在、WindowsおよびMacに標準で付属しているので、誰でも簡単に使用可能である。よい時代になったものである。しかし逆に言うと、最近は小説同人誌でよく見かけるフォントとなってきており、個性を発揮して他との差別化を図りたい向きには物足りないかもしれない。
ヒラギノ明朝 ヒラギノ明朝は、Macについてくる美しいフォントである。ファンも多く、ヒラギノ目当てでMacを買う人がいるほどである（「ヒラギノを買ったらMacがついてきた」という言い方が定番ネタとなっている）。
ただしMacについてくるヒラギノ明朝はウェイトがW3であり、小説本文に使うにはやや太くかつ平仮名がやや大きめである。W3よりも細めのW2であれば、平仮名がやや小さく設計されているのでより小説に向いていると言えるであろう1。ただし、W2はMacに付属していないので別途購入の必要がある。
しっぽり明朝v2 しっぽり明朝v2はフリーフォントながら綺麗なフォントであり、小説に向いている（もっとも私自身は使ったことがないので使用感はよく分からない）。公式サイトには次のような説明がある。
 しっぽり明朝は、石井中明朝体OKLやリュウミンKO、A1明朝、筑紫Aオールド明朝等に影響を与えた、東京築地活版製造所の名作書体である五号系活字を下敷きに、物静かで上品で、見ているだけでうっとりするような明朝体を目指して制作した、オールドスタイル明朝体フリーフォントです。
 五号系活字が好きな人にはおすすめのフリーフォントである。
源暎こぶり明朝 源暎こぶり明朝もまたフリーフォントながら綺麗なフォントであり、小説に向いている（もっとも私自身は使ったことがないので使用感はよく分からない）。公式サイトには次のように書かれてあり、小説向きであることが明言されている。
 「源暎こぶり明朝」は小説創作活動や電子書籍閲覧など縦組み・長文・文芸向けをターゲットに製作された本文用明朝体です。
 ヒラギノ明朝にも近しい印象のフォントで、小説同人誌ではMS明朝・游明朝に並んでよく見かける気がする。
筑紫明朝 筑紫明朝は有料フォントであるから、気軽に使うわけにはゆかない。しかし非常に美しいフォントであり、小説本文用としてぜひとも候補に入れておきたい。LETSの学生割か、もしくはmojimo-kireiというパックで契約すると、比較的安い年間価格で使用することができる。
小説向きのフォントのなかで比較的安い有料フォントとしては、他にもイワタ明朝体オールドのTrueType版がある。また、一太郎のプレミアム版を買うとフォントがついてくる（フォントを単体で買うよりも一太郎ごと買ったほうが安いので、実質「フォントを買ったら一太郎がついてくる」状態である）ので、フォントにこだわる向きは検討してみるとよい。
小説向きではないフォント 最後に、小説向きではないフォントを紹介する。例えば以下のようなフォントは小説で使わないのが無難である。
 創英角ポップ体 MS明朝 小塚明朝 ほのか明朝 はれのそら明朝  創英角ポップ体やMS明朝は言うまでもなく、ほのか明朝やはれのそら明朝も小説には向いていない2。
最も確実にフォントを選ぶには、フォントの公式サイトに行って、そのフォントがいかなる用途を想定して作られたかを確認するのがよい。こうすれば、フォントのセンスに自信がなくても、小説向きかどうかをある程度見極めることができよう。
九大文学では 今回、『九大文学』では基本的に游明朝を採用した。ただし本文の一部には游明朝体五号かなを使用し、小さなアクセントとした。
欧文は、游明朝にはCochinealを、游明朝体五号かなにはfbbを合わせた。游明朝とCochinealの組み合わせは相性がよいので試されるとよいであろう。
　（次回に続く）
  W3とW2の違いについては、亮月製作所＊書体のはなし・ヒラギノ明朝体を参考にした。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
 なぜわざわざ、ほのか明朝とはれのそら明朝を取り上げたのかというと、最近の文藝部の部誌に使われていたからである。今時の後輩たちは市販の小説本を読んだことがないのか……？　と思わせるほど、小説っぽくないフォント選定であった。いや、フォントを工夫すること自体はありがたいことなんですけどね。というかこんなところで批判的なことを言わずに直接言えよという声が聞こえてきそう。すみません直接言う勇気はありませんでした。後輩たちが楽しく活動できているならそれでいいんです。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
   </description>
    </item>
    
    <item>
      <title>ベスト文集制作記録③（目次）</title>
      <link>https://qdaibungei.github.io/latex/documents/2019-10-14-latexnovel/</link>
      <pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2019-10-14-latexnovel/</guid>
      <description>前回に引き続き、小説組版の方法を解説していく。今回は、「目次」の作り方である。
目次 目次のデザイン 今回のベスト文集では、目次は下図のようなデザインにした。このデザインは、某小説誌を参考に作った。
ノンブル1のフォントには、源暎ノンブルを使った。たったこれだけの工夫でかなりデザインが引き締まる気がする。
目次のデザイン（見開き版） 見開きで見ると、目次はこんな感じ。目次ページの始まりを示す中扉には、「九大文学＊目次」と書いた。この「九大文学」のフォントは、扉ページと同じく廻想体にしてある。逐一フォントを揃えていくことで本全体に統一感を出すためである。
「九大文学」という文字だけのページ（最後の画像の左側）は、本文の始まりを明示するための中扉。
LaTeXによる目次の作り方（通常時） 通常、LaTeXで目次を生成するには、\tableofcontentsという命令を使うことになっている。
しかし、\tableofcontentsで上のような目次を作るのは結構難しい。なぜならば、第一に、デフォルトの\tableofcontentsでは、著者名と作品名をどちらも出力するということができないからだ（そもそもLaTeXのデフォルトの設定では、複数の著者名を扱うような仕組みがない）。
第二に、\tableofcontentsで出力される目次のレイアウトを変更するのが難しい。\tableofcontentsを再定義してやればいいのだが、\tableofcontentsの元の定義はかなり複雑で、変更が面倒である。
LaTeXによる目次の作り方（私家版） さてそこで私は、\tableofcontentsに代替しうるマクロを別途定義して使っている。そのマクロとは、以下に示すような\Mokujiマクロである。
%% \Mokuji \newcommand{\Mokuji}[3]{%  #1\hskip1zw% 作品名  \textgt{#2}\hskip1zw% 著者名  \rensuji{\pageref{#3}}% ページ数 } このようなマクロを作っておいたうえで、本文内に次のように記述する。
\Mokuji{走れメロス}{太宰治}{dazai}% 目次生成。引数は、\Mokuji{&amp;lt;作品名&amp;gt;}{&amp;lt;著者名&amp;gt;}{&amp;lt;ページ参照用ラベル&amp;gt;}とする。  %  \label{dazai}% 小説開始時点にラベルを張っておく % 以下、小説本文 すると、次のように出力される。
基本的には、このように\Mokujiマクロを何個も使って目次を作ればよい。目次デザインを変えるためには、\Mokujiマクロの定義を適宜変更すればよい。
ベスト文集では、\mokujiを次のように定義して使った。
%% \mokuji \newcommand{\mokuji}[4]{%  \expandafter\ifx#4\relax \leavevmode\hbox to 14zw{}%  \else \leavevmode\hbox to 14zw{\rule[-1zw]{.4pt}{2zw}\kern.5zw\fontsize{12\bQ}{\baselineskip}\selectfont #4\hss}%  \fi \expandafter\ifx#2\relax \else \leavevmode\hbox to 6zw{%  \hss\textgt{\fontsize{12\bQ}{\baselineskip}\selectfont #2}%  }%  \fi \kern.5zw\rule[-1zw]{.4pt}{2zw}\kern.5zw #1 \def\qbook@mkj@page{\pageref{#3}}%  \expandafter\ifx\csname r@#3\endcsname\relax \def\qbook@mkj@page{?</description>
    </item>
    
    <item>
      <title>ベスト文集制作記録②（扉）</title>
      <link>https://qdaibungei.github.io/latex/documents/2019-10-13-latexnovel/</link>
      <pubDate>Sun, 13 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2019-10-13-latexnovel/</guid>
      <description>前回に引き続き、小説組版の方法を解説していく。今回は、扉ページの作り方である。
扉 扉とは 「扉」とは、表紙をめくって最初にあるページのことである。書籍の題名などを書くページである。今回のベスト文集では、次のような扉を作った。
我ながらシンプルでかっこいい扉である。「九大文学」という文字のフォントは、背表紙に使ったのと同じフォント（廻想体）を使っている。これにより統一感が出て、本全体のデザインのまとまりがよくなったはずである。
ロゴ 扉の左下には、九大文藝部のロゴを配置してある。
このロゴは、かなり昔にデザインされ、部誌で使用されていたものである。一時期このロゴはまったく使用されなくなっていたが、私が再び使い始めた。
今回のベスト文集におけるロゴは、以前のロゴとは少しだけデザインが異なっている。欧文フォントは、以前のロゴとまったく同じもの（Classico）を使用している。だが和文フォントは、本全体の雰囲気に合わせて「廻想体」を選択した（以前のロゴではヒラギノ明朝が使われていた）。
文藝部の遺伝子は、少しずつアップデートされながらも、着実に継承されていく。
LaTeXによる扉の作り方 LaTeXで扉を作るには通常、\title{九大文学}のように本のタイトルを指定し、\maketitleという命令を書き込むことによって扉を生成する。しかしこの方法では、扉ページのレイアウトを変更するのが非常に難しい。具体的には、クラスファイルを編集して\maketitleという命令を定義し直せばよいと思われるが、この方法は余程TeXに習熟している人でない限り実行困難であろう。今回作ったベスト文集のように、扉だけ横書きで、本文は縦書き、といったような複雑なレイアウトにする場合は、特に面倒だと思われる。
そこで、扉を作るにあたっては、実現したいレイアウトを直接LaTeXの文法に従って書くほうが無難である。具体的には、私は以下のように記述して扉を作った（ただし、以下の記述のなかには独自に定義したマクロも多く含まれているので、これをそのままコピペしてもエラーが出るだけである。注意されたい）。
\newhanmenII \newhanmen{tate,te=-2mm} \hanmenchangedir \thispagestyle{empty} \begingroup \vspace*{70mm} {\fontsize{30\bQ}{30H}\gtfamily\ebseries\romanfamily{agencyfb}\romanseries{bx}\selectfont\booktitlename} \leftskip-1zw \vspace{\fill} \parbox{9zw}{%  \begin{center} \fontsize{15\bQ}{16H}\classico \hspace*{0.18em}Kyushu \hspace{0.05em}Univ.\\ \vspace{-.2em}%  \mbox{}\hspace{-1.3zw}{\gtfamily\ebseries\fontsizeX 九州大学文藝部}\\ \vspace{-.1em}%  Literary Club \end{center} } \endgroup 何をやっているかというと、基本的には、「文字の大きさやフォントを切り替えつつ、\vspaceや\hspaceで文字の位置を調整して配置している」ということになる。すなわちWordなどと同じ要領でデザインすればよい。
文字の大きさは、
\fontsize{20Q}{25H}\selectfont のように書けば指定できる。また、フォントの指定をするには
\kanjifamily{hmc}\romanfamily{qag}\selectfont のように書けばよい。フォント指定のマクロには\fontfamilyという命令もあるが、ここでは敢えて\fontfamilyではなく\kanjifamilyと\romanfamilyを使っている。こちらの命令を使えば、和文と欧文でまったく違うフォントを指定することが可能となるので、便利である。
　（次回に続く）</description>
    </item>
    
    <item>
      <title>ベスト文集制作記録①（表紙）</title>
      <link>https://qdaibungei.github.io/latex/documents/2019-10-12-latexnovel/</link>
      <pubDate>Sat, 12 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2019-10-12-latexnovel/</guid>
      <description>序 概要 この記事は、ベスト文集の制作記録である。それと同時に、LaTeXで小説同人誌を作る方法の解説記事をも兼ねている。以前、初級編を執筆したときに、「中級編をいずれ書くつもりだ」と言いながら、ずっと書くのをサボり続けてきた。そこで今回、中級編を書き起こすことにしたのであった。
ベスト文集とは 九大文藝部では、およそ四年に一度の頻度で『九大文学』という名の冊子を刊行することが慣わしとなっている。『九大文学』はいわゆるベスト文集、すなわちこれまで発行してきた部誌のなかから、秀逸と思われる作品を部員の投票によって選出し、一冊の本にまとめた文集である。
先日、2019年度版のベスト文集が発行された。私も編集人の一人として、主に組版に携わらせていただいた。
私はこれまで、長いこと小説同人誌の編集に携わってきた。その活動を通じて、小説同人誌の作り方についてのノウハウが蓄積されてきた。先日発行した2019年度版ベスト文集では、そのノウハウを遺憾なく発揮したつもりである。ベスト文集の制作記録を書くことを通じて、LaTeXによる小説同人誌の制作法を伝えられたらと願う1。
表紙データ 表紙 まずは表紙データの作り方から解説していこう。今回は、某君がGIMPで表紙を作ってくれた。英字だけのシンプルでかっこいい素敵な表紙だ。まるでペーパーバックのようである。
さて、このような素敵なデザインの表紙をどうやって作るかであるが、これについては、残念ながら私から伝えられることは何もない。「GIMPやペイントや手書きなどで頑張って作って下さい」と言うほかない。
私から言いたいことは、GIMPなどで作った表紙画像から、どうやって入稿用の表紙データを作るかである。
LaTeXによる表紙データの作り方 表紙データをPDFで入稿するようにと規定している印刷所も多い。つまり入稿するためには、画像をPDF化しなければならないのだ。そこで、今回私はPNG形式の表紙データをLaTeXによってPDF化することにした。
まず、表紙用の画像データをhyosi.pngというファイル名で保存しておくことにする。そして、次のようなTeXファイルを作る。
\documentclass{article} \usepackage{pdfpages} \begin{document} \includepdf[fitpaper]{hyosi.png} \end{document} これをpdfLaTeXで処理すれば、PDF形式の表紙データが得られる。TeXは、画像をPDF化するのにも使えるのだ。便利なものである。
PP加工 印刷所に入稿予約をするとき、表紙に使う紙を選ぶことができる。今回はペルーラ・スノーホワイトを使用した。これは、光を当てるときらきらと輝く紙である。この紙に、オプションとして、マットPP加工を施してもらった。
なるべくPP加工を施してもらうことが大切である。PP加工をしておけば、本同士が擦れても塗料が剥がれることがないし、水にも多少耐性ができて丈夫になるので、PP加工はなるべく印刷所に頼んでやってもらおう。
　（次回に続く）
  などとエラそうに書いているが、所詮は素人の手すさびにすぎない。間違ったことが書かれてあっても、大目に見ていただきたい。&amp;#160;&amp;#x21a9;&amp;#xfe0e;
   </description>
    </item>
    
    <item>
      <title>LaTeXによる小説誌制作のヒント</title>
      <link>https://qdaibungei.github.io/latex/documents/2017-10-12-book-making-hints/</link>
      <pubDate>Thu, 12 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2017-10-12-book-making-hints/</guid>
      <description>はじめに 以下では、小説誌制作をLaTeXでおこなう場合のヒントを述べる。
フォントの指定 LaTeXのデフォルトフォントはあまり小説向きではない。そこで以下のように記述しフォントを変更する。
まず日本語フォントであるが、特にこだわりがないならば、とりあえず游明朝にしておくとよい。游明朝を使うには、以下のように書く（以下はupLaTeXを使うことを前提とした書き方である。いまどきわざわざpLaTeXを使う理由はあるまい）。
% upLaTeXでA5サイズの本を作る場合のdocumentclassの書き方 \documentclass[a5paper,papersize,uplatex,dvipdfmx]{jsbook} % 日本語フォントを游明朝にする \usepackage[deluxe,uplatex]{otf} \AtBeginDvi{\special{pdf:mapfile otf-up-yu-win10.map}}% Windows 10以外の場合は適宜変更せよ。追記：こう書かずにpxchfonパッケージを使うほうが簡単かも。 欧文フォントも変更しておこう。
% 欧文フォントの変更 \usepackage[scale=1.05]{cochineal}% この欧文フォントはわりと游明朝に合う \usepackage[scale=0.95,defaultsans]{opensans}% この欧文フォントはいろいろな日本語ゴシック体フォントに合う jdashパッケージ 游明朝だと、ダッシュ――がつながらない。そこでjdashパッケージを導入し、これを使う。jdashパッケージについてはここを参照のこと。
hanmenパッケージの使用 まずhanmenパッケージをダウンロードし、TeXファイルと同じフォルダへ入れる。
そしてプリアンブルに以下を記述する。
% 上のフォント設定をした後に書く \usepackage[Q=13,H=22,W=49,L=21,ko=3.875truemm,te=6.5truemm,footskip=2.47truemm,tate]{hanmen} % ついでに、欧文のベースラインなどを適当に変更しておこう \tbaselineshift=.3zw \kanjiskip=0zw plus .25zw minus .03125zw \xkanjiskip=.25zw plus .25zw minus .0625zw これで厳密な版面の設定が可能となる。厳密というのは、たとえば表と裏とで行が揃っているということである（厳密な設定をしないと、行がズレる。紙を透かして見ると行がズレているかどうか分かる）。
hanmenパッケージの使い方の詳細はこの記事を参照のこと。
\tcyコマンド LaTeXで縦書きをする際、縦中横には\rensujiを使うよう言われる。しかし\rensujiだと前後のアキがおかしくなる（たとえば、行頭で\rensujiを使うとインデント量が狂う）。そこで\tcy命令を新たに作り、これを使うのがよい。
\usepackage{plext} \makeatletter \chardef\nvlsty@zenkakuSpace=\jis&amp;#34;2121\relax \newcommand{\tcy}[1]{%  \nvlsty@zenkakuSpace\kern-1zw\relax \leavevmode\hbox to 1zw{%  \centering\rensuji*{#1}\relax }\relax \kern-1zw\nvlsty@zenkakuSpace } \makeatother 以上をプリアンブルなどに書いておく。使い方はいたって簡単で、\tcy{12}時、のようにすればよい。
禁則処理の設定 縦書きの場合、禁則処理はほどほどに抑制しておくと商業出版物の組版に似せることができる。プリアンブルなどに以下を記述する。
\makeatletter \def\hoge@set@prebreakpenalty#1#2{%  \@tfor\@tempa:=#1\do{\expandafter\prebreakpenalty\expandafter`\@tempa =#2}} \clubpenalty=0 \widowpenalty=0 \jcharwidowpenalty=0 \displaywidowpenalty=0 \prebreakpenalty\jis&amp;#34;2147=10000 % 5000 ’ \postbreakpenalty\jis&amp;#34;2148=10000 % 5000 “ \prebreakpenalty\jis&amp;#34;2149=10000 % 5000 ” \inhibitxspcode`〒=2 \hoge@set@prebreakpenalty{ヽヾゝゞ々〻}{10000} \hoge@set@prebreakpenalty{ーぁぃぅぇぉっゃゅょゎァィゥェォッャュョヮヵヶゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ…}{0} \makeatother フッター 以前出した本のフッターの設定は大体こんな感じである。</description>
    </item>
    
    <item>
      <title>版面数値計算</title>
      <link>https://qdaibungei.github.io/latex/documents/2017-03-28-layoutcal/</link>
      <pubDate>Tue, 28 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2017-03-28-layoutcal/</guid>
      <description>版面の数値を計算するプログラムをJavaScriptで作った。
layoutcal.html
使い方はリンク先に書いてある。デザインをもう少し洗練させたかったが、デザイン力がないのでこのままで公開。</description>
    </item>
    
    <item>
      <title>LaTeXによる小説組版法（初級）</title>
      <link>https://qdaibungei.github.io/latex/documents/2017-02-26-latexnovel/</link>
      <pubDate>Sun, 26 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2017-02-26-latexnovel/</guid>
      <description>この記事は、LaTeXで小説を組版するにはどうすればよいかを具体的に解説するものである。理論的な話は最小限に留め、主として実践的な話題を取り上げる。つまり、具体的にどう手を動かせばLaTeXで小説が組版できるのかを解説する。
コンピュータおよびLaTeXの初心者でも読めるように配慮したつもりだが、LaTeXの知識ゼロだと厳しいかもしれない。
なお、以下の方法はあくまでも初心者向けの簡易的方法であり、私が普段LaTeXで組版している実際の現場の方法とはかなり異なる。
電撃文庫の再現 雛形ファイルの用意 具体例として、LaTeXで電撃文庫のデザインで組版してみよう。といっても商用フォントが手元にない限り完全再現はできないので、大体同じようなデザインを作るだけであるが。
まず、以下を novelstyle.sty という名前で保存する。スタイルファイル内の記述の意味は、一応コメント文で書いておいた。
\NeedsTeXFormat{pLaTeX2e} \ProvidesPackage{novelstyle} \RequirePackage[Q=11.5,H=19,W=42,L=17,te=-2mm,headsep=5mm,tate]{hanmen} \RequirePackage[deluxe,uplatex]{otf} \RequirePackage{plext,pxrubrica}% plextは縦組み時に有用なパッケージ、pxrubricaはルビ振りに必要なパッケージ。  % %% header &amp;amp; footer % % ページ番号を出力するときは\thepageと書く。 \fancyhf{}% ヘッダー・フッターの初期化 \def\nvlsty@nombre{\textit{\thepage}} \def\nvlsty@booktitle{ここにタイトルを書く} \fancyhead[RE]{\vspace*{0pt}\scriptsize\nvlsty@nombre} \fancyhead[LO]{\vspace*{0pt}\footnotesize\nvlsty@nombre\hskip1zw\scriptsize\nvlsty@booktitle} % %% \tcy % % LaTeXの解説書では、縦中横に\rensujiを使うこととされているが、 % \rensujiだと無駄なアキが入ってしまいベタ組みできない。 % そこで、ここでは新たに\tcyを定義する。 \chardef\nvlsty@zenkakuSpace=\jis&amp;#34;2121\relax \def\tcy#1{%  \nvlsty@zenkakuSpace\kern-1zw\relax \leavevmode\hbox to 1zw{%  \centering\rensuji*{#1}%  }%  \kern-1zw\nvlsty@zenkakuSpace } % %% \xobeylines % % これは、空行をあけなくても段落分けできるようにする工夫。 % 本文中、\xobeylinesと書けば、空行をあけなくても段落が変わる。 % \disobeylinesと書けば、LaTeX記法通り、空行をあけないと段落が変わらないようになる。 % ただし、併用するパッケージによってはいろいろ弊害が出る場合があるので、素直に空行によって段落分けしたほうが無難かもしれない（実際私も、普段は空行で段落分けしている）。 {\catcode`\^^M=\active \gdef\xobeylines{\catcode`\^^M\active \def^^M{\par\leavevmode}}%  \global\def^^M{\par\leavevmode}% } \def\disobeylines{\catcode`\^^M=5 } \let\disxobeylines=\disobeylines \AtBeginDocument{\xobeylines}%% 本文開始直後から\xobeylinesが適用されるようにする。  % %% 全角アキ % % 疑問符などの後に全角空白文字「　」を使ってアキを作ると、疑問符が行末に来たとき空白が行頭に出てしまって都合が悪い。 % そこで、全角アキは以下のマクロで作る必要がある。 \newcommand{\zenkakuaki}{\hskip1zw plus .</description>
    </item>
    
    <item>
      <title>本作りに役立つサイト</title>
      <link>https://qdaibungei.github.io/latex/documents/2017-02-25-bookmake/</link>
      <pubDate>Sat, 25 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2017-02-25-bookmake/</guid>
      <description>ここでは小説本を作るのに役立つサイトを列挙する。
組版の知識全般 特定のソフトウェアによらない、組版の普遍的な知識を得られるサイトを列挙した。上二つは必読。
小説同人誌のための組版レイアウトとDTP かっちりとした文章で組版に必要な知識を網羅してくれている。
文字を組む方法 プロの手による連載記事。
組版―Wikipedia 用語の確認に。
日本語組版処理の要件 技術者向け。
LaTeX関連 吉永徹美のLaTeX研究室 TeXコンサルタントの吉永徹美氏のサイト。残念ながら、いつのまにか閉鎖されてしまった。しかしインターネットアーカイブは残っているので中身は今も読むことができる。
MyTeXpert 書籍ではなくネットの文書でLaTeXに入門するなら、吉永氏のサイトかこのサイトがよいだろう。
よくわかるLaTeX小説サポートページ 同人誌として売られている『よくわかるLaTeX小説』という本のサポートページ。本を買っていなくても役立つ。
ルビのついた縦書の日本語文章をPDFにする方法 私が初めてLaTeXで小説を組もうとしたとき参考にしたサイト。このサイトには他にも「喘ぎ声ジェネレータ」などの面白いツールが公開されていたのだが、今確認してみたら、残念なことにいつのまにか閉鎖されていた。
編集者のためのTeX/LaTeX入門 LaTeXとは何か、ざっと概要を知りたいならこれ。
あがきながら覚えるTeX TeXで小説組版する方法を、あがきながら研究しているサイト。LaTeX初心者にも配慮された良心的な作りで、TeXインストール方法から解説してある。小説に特化しているのでわれわれ文藝人間にとってはありがたいサイトである。</description>
    </item>
    
    <item>
      <title>初心者による初心者のための小説DTP入門の原稿の残骸</title>
      <link>https://qdaibungei.github.io/latex/documents/2016-11-29-dtp-guide-zangai/</link>
      <pubDate>Tue, 29 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2016-11-29-dtp-guide-zangai/</guid>
      <description>はじめに この文書の目的 この文書の狙いは、読みやすい小説の同人誌を作成するにはどうすればよいかを、主にDTPの観点から解説することにあった（が、この目標は断念を余儀なくされた1）。
主な対象読者は、小説の同人誌づくりの工程のうち、本文データ作成で悩んでいる人たちである。すなわち、
 同人誌を作ってみたが、どうも本文が読みづらい 商業本に比べて見劣りがする  と漠然と感じている人や、
 Wordに小説本文を流し込んでみたが、『!?』が横倒しになって気持ち悪い ルビを振ると行間が空いてしまう  といったように、意図した通りのデータ作成ができず苦しんでいる人が該当する。
私の方針 今回、初心者向けということで、以下の方針を採用することとした。
 できるだけ安く ただし使用ソフトはWord  できるだけ安く済ませるに越したことはない。特に初心者の場合、いきなり高価なソフトに手を出すのはあまり賢いやり方ではないであろう。
ただし、使用ソフトはWordを採用した2。これは、初心者の場合Wordが最も操作に慣れていると考えられたからである。もちろん、WordがなければLibreOfficeで代用して構わない。
注意 私の独断と偏見が多分に混じっていることを留意されたい。
フォント まずはフォントの選定からである。フォントは本文の印象を担う重要なファクターであり、慎重に選ぶ必要がある。フォントは商用のものを購入すると非常に高価なので、まずは無料フォントの中から選ぶことにする3。
結論から言ってしまえば、本文フォントは以下の4つのいずれかを使用するのが無難であろう。これらはすべて無料で使えるが、ただしヒラギノだけはMacにしか付いていない。
 游明朝 ヒラギノ IPAex明朝 F910明朝W3-IPA  個人的には、MS明朝は避けたほうがよいと考えている。
MS明朝 MS明朝を使ってはならない理由は、端的に「読みづらい」からである。
そもそもMS明朝は小説向きのフォントではない。もともと、MS明朝は解像度の低いディスプレイ用に開発されたフォントであり、印刷向きではないのである。その証拠に、開発元のサイトを見ると、
 そのころは、ディスプレイの解像度が低く、小さな画面で、いかに小さい文字まできれいに表示させるかということでいろいろな工夫をしました。
 と書いてある。推測するに、MS明朝のひらがなが独特な形状をしている（直線が多用されていたり、少しばかり大きめだったりする）のは、解像度が低いディスプレイでも字が潰れず読めるように、という工夫だと思われる。
当時は大変役に立ったであろうそうした工夫は、我々の目指す「美しい小説本をつくる」という目的の前ではむしろ百害あって一理なしである。
游明朝 游明朝は、最も小説向きと言えるだろう。公式サイトには次のように書いてあり、小説用に開発されたフォントであることが明言されている。
 游明朝体ファミリーは「時代小説が組めるような明朝体」をキーワードに、単行本や文庫などで小説を組むことを目的に開発した游明朝体Rを核とした明朝体ファミリーです。
 游明朝は現在、Windows および Mac に標準で付属している。
なお、最新のMacには「游明朝体36ポかな」という仮名書体が付属している（游明朝の漢字部分と組み合わせて使う）。公式サイトを見ると、もともとは見出しフォントとしての使用を想定しているようである。したがって、本文フォントとして読みやすいのかどうか定かではない。場合によっては使ってみてもよいかもしれない。
ヒラギノ ヒラギノフォントは、とにかく美しいフォントである。ファンも多い。「ヒラギノを目当てにMacを買った」という人も結構いる（フォント単体を買うよりMacごと買ったほうが安いので、しばしば「ヒラギノを買ったらMacがついてきた」と表現される）。
個人的な意見では、小説よりは横書きの文書に適しているように思うが、縦書きの小説に使用してもさほど問題はなかろう。
Macにしか付属していないのがちょっと残念である。
IPAex明朝 独立行政法人情報処理推進機構（IPA）が作ったフォントである。無料でダウンロードできる。特に小説向きというわけでもないが、普通に本文書体として活用できるフォントである。
F910明朝W3-IPA 「現代的な骨格と古くからある味わいを融合した明朝体」とのことである。漢字部分は上で紹介した「IPAフォント」を、ひらがなやカタカナは「フォント910」という会社で作ったものを組み合わせて作られたフォントである。築地体というのか、仮名部分が古風な雰囲気なのが嬉しい。ただ本文に使うには、ちょっと仮名が大きいような気がしないでもない。
古風といえば「はんなり明朝」もIPAフォントの漢字に古風な仮名書体を合わせたフリーフォントだが、こちらは縦書きで使うと縦の線が揃わなくてあまり読みやすくない、という意見をどこかで見た気がする。真偽の程は定かではないが。美しさについては、最終的には自分の目で判断するしかないであろう。
版面設計 本文領域のレイアウトのことを、版面という。この版面設計こそが、小説本の読みやすさを左右する最重要の工程である。
基本的には、次の4点を決定することで、版面設計したことになる。
 文字サイズ 行送りサイズ 1行あたりの文字数 1ページあたりの行数  文字サイズ 好きなフォントを選んだら、次に本文の文字サイズを決めよう。大きすぎても小さすぎてもいけない。基本的には市販の本を見て、それに合わせるのがよいだろう。</description>
    </item>
    
  </channel>
</rss>
