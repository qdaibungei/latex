<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Latex on 文藝部LaTeX研究会</title>
    <link>https://qdaibungei.github.io/latex/tags/latex/</link>
    <description>Recent content in Latex on 文藝部LaTeX研究会</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 14 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://qdaibungei.github.io/latex/tags/latex/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>jdashパッケージを更新した</title>
      <link>https://qdaibungei.github.io/latex/documents/2019-07-14-jdash/</link>
      <pubDate>Sun, 14 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2019-07-14-jdash/</guid>
      <description> はじめに jdashパッケージを二年半ぶりくらいに更新した。使いかたはここに記してある。
改良点  依存パッケージとして必須だったotf.styは、今回の変更により、必要なくなった。 ダッシュの形式を変更するマクロを使いやすいように作り変えた。 倍角ダッシュを、LaTeXの機能である\ruleによっても出力できるようにした。  </description>
    </item>
    
    <item>
      <title>表題つきの四角い枠（四角いitembox環境）</title>
      <link>https://qdaibungei.github.io/latex/documents/2019-06-15-fitembox/</link>
      <pubDate>Sat, 15 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2019-06-15-fitembox/</guid>
      <description> はじめに ascmac.styを用いると、itembox環境というものが使える。表題つきの丸い枠である。この枠は、レジュメなどを作るとき使い勝手がよい。
ところで丸い枠ではなく四角い枠が使いたいときもある。こういうときはどうすればよいか。四角い枠を定義すればよい。以下は、ネットで見つけて拾ったものである。
fitembox環境の定義 以下、ネットで拾った「表題つきの四角い枠」の定義である。fitembox環境と名づけられている。使いかたはitembox環境と同じである。
% % fitembox environment % \def\fitembox{\@ifnextchar[{\@itembox}{\@itembox[c]}} \def\@myhleader{\leaders\hrule height .4pt\hfil} \def\endfitembox{\end{minipage}\egroup%  \setbox\scscb@x=\hbox to\linewidth{%  \vbox{\offinterlineskip%  \thicklines\setlength{\unitlength}{1pt}%  \hbox{\rule{10pt}{.4pt}%  \hbox to\@scw{\if l\the\@iboxpos\else\@myhleader\fi \space\vbox to.4pt{\vss\hbox{\box\@iboxstr}\vss}%  \space\if r\the\@iboxpos\else \@myhleader\fi}%  \rule{10pt}{.4pt}} \vskip 10pt \hbox to\linewidth{\hfill\box\scb@x\hfill} \vskip 10pt \hrule height.4pt}} \noindent\hbox to\linewidth{%  \vrule width .4pt \hss \box\scscb@x \hss \vrule width .4pt}%  \egroup\vskip0pt} 使用例 \begin{fitembox}[l]{夏目漱石} 吾輩は猫である。 \end{fitembox} </description>
    </item>
    
    <item>
      <title>三点リーダを並べる</title>
      <link>https://qdaibungei.github.io/latex/documents/2019-04-01-leader/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2019-04-01-leader/</guid>
      <description> 方法 目次など、三点リーダを行長いっぱいまで並べる必要に迫られることがある。これをLaTeXで実現するためには\leadersを使う。
あ\kern-.33333zw\leaders\hbox to .33333zw{\hss\raise.3zw\hbox{.}\hss}\hfill あ こうすると、ピリオドを三点リーダと同じ間隔で行長いっぱいまで並べることができる。
結果 組版結果は以下のようになる。
上は\leadersを使ったものであり、下は…（三点リーダ）を直接手作業で書き並べたものである。上と下でほぼ同じ形になっており、望ましい結果が得られていることが分かる。
参考文献  藤田眞作『LaTeX2eまくろの八衢』（オンライン版）  </description>
    </item>
    
    <item>
      <title>和文フォントを混植する方法</title>
      <link>https://qdaibungei.github.io/latex/documents/2019-03-31-konsyoku/</link>
      <pubDate>Sun, 31 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2019-03-31-konsyoku/</guid>
      <description>はじめに 和文フォントは、平仮名や片仮名だけ別のフォントに置き換えて使用することがある。漢字は同じでも、平仮名が違えば、紙面の印象を大きく変えることができるからだ。このように、漢字と平仮名とで別のフォントを使うことを「混植」と言う。
LaTeXで混植をする方法の解説としては、これまでにも優れた記事がいくつか存在している。例えば「ヒラギノ明朝W2と游築五号仮名W2混植方法」など。しかしそこに書かれた方法は、いくぶんか簡略的なものだというきらいがある。otfパッケージのburasageオプションが使えなかったり、upLaTeXでは使えなかったりするのだ。
そこで本稿では、上述の欠点への補足として、やや備忘録的に記事を書いてみたい。
必要なファイルの用意 まず、必要なファイルを揃えておこう。ここでは游明朝体と游明朝体五号かなの混植をしてみよう。
CTANにあるjapanese-otfパッケージからbaseplとscriptというディレクトリをダウンロード。またmkjvfもダウンロードしておく。
同様にjapanese-otf-uptexからbasepl、script、umkjvfをダウンロード。
さらに次のスクリプトを作成する。
#!/bin/sh  mkdir tfm mkdir vf # 普通にtfmファイルを生成 for face in r b do for hv in h v do ppltotf basepl/base-${hv}.pl yumin5go${face}-${hv} ppltotf basepl/base-${hv}.pl expyumin5go${face}-${hv} ppltotf basepl/brsg-${hv}.pl brsgyumin5go${face}-${hv} ppltotf basepl/brsg-${hv}.pl brsgexpyumin5go${face}-${hv} #  uppltotf -kanji=uptex basepl/ubase-${hv}.pl upyumin5go${face}-${hv} uppltotf -kanji=uptex basepl/ubase-${hv}.pl upexpyumin5go${face}-${hv} uppltotf -kanji=uptex basepl/ubrsg-${hv}.pl upbrsgyumin5go${face}-${hv} uppltotf -kanji=uptex basepl/ubrsg-${hv}.pl upbrsgexpyumin5go${face}-${hv} done done # ここが混植のキモ。 # 混植しないときは引数二つでよかったが、混植のため引数は三つ。 # しかし仕組みはあまり理解できていない。 for face in r b do for hv in h v do perl mkjvf -m yumin5go${face}-${hv} hmin${face}-${hv} r-yumin5go${face}-${hv} perl mkjvf -m -sage brsgyumin5go${face}-${hv} hmin${face}-${hv} r-yumin5go${face}-${hv} perl mkjvf -m -expert expyumin5go${face}-${hv} hmin${face}-${hv} cidjmin${face} perl mkjvf -m -sage -expert brsgexpyumin5go${face}-${hv} hmin${face}-${hv} cidjmin${face} done done for face in r b do for hv in h v do perl umkjvf -m -ucs -sp 1 upyumin5go${face}-${hv} uphmin${face}-${hv} r-upyumin5go${face}-${hv} perl umkjvf -m -ucs -sp 1 -sage upbrsgyumin5go${face}-${hv} uphmin${face}-${hv} r-upyumin5go${face}-${hv} perl umkjvf -m -ucs -sp 1 -expert upexpyumin5go${face}-${hv} uphmin${face}-${hv} cidjmin${face} perl umkjvf -m -ucs -sp 1 -sage -expert upbrsgexpyumin5go${face}-${hv} uphmin${face}-${hv} cidjmin${face} done done echo &amp;#34;making tfm for supplementary plane .</description>
    </item>
    
    <item>
      <title>jfontsパッケージ</title>
      <link>https://qdaibungei.github.io/latex/documents/2019-03-30-jfonts/</link>
      <pubDate>Sat, 30 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2019-03-30-jfonts/</guid>
      <description> はじめに LaTeXでPDFに和文フォントを埋め込む際、いちいちmapファイルを書き換えるのは面倒である。そこでjfontsパッケージというLaTeXパッケージを作った。簡単な工夫だが、役に立つ。
jfontsパッケージは、otfパッケージと併用することを前提としている。フォントを変えたいときはフォントのファイル名を書き換えればよい。
jfonts.sty % % jfonts.sty %  \NeedsTeXFormat{pLaTeX2e} \ProvidesPackage{jfonts} \def\jf@hminl{ToppanBunkyuMincho-Regular.otf} \def\jf@hminr{HiraMinProN-W3.otf} \def\jf@hminb{HiraMinProN-W6.otf} \def\jf@hgothr{HiraKakuProN-W3.otf} \def\jf@hgothb{HiraKakuProN-W6.otf} \def\jf@hgotheb{HiraKakuStdN-W8.otf} \def\jf@hmgothr{HiraMaruPro-W4.otf} \AtBeginDvi{%  % TEXT, 90JIS  \special{pdf:mapline hminl-h H \jf@hminl}%  \special{pdf:mapline hminl-v V \jf@hminl}%  \special{pdf:mapline hminr-h H \jf@hminr}%  \special{pdf:mapline hminr-v V \jf@hminr}%  \special{pdf:mapline hminb-h H \jf@hminb}%  \special{pdf:mapline hminb-v V \jf@hminb}%  \special{pdf:mapline hgothr-h H \jf@hgothr}%  \special{pdf:mapline hgothr-v V \jf@hgothr}%  \special{pdf:mapline hgothb-h H \jf@hgothb}%  \special{pdf:mapline hgothb-v V \jf@hgothb}%  \special{pdf:mapline hgotheb-h H \jf@hgotheb}%  \special{pdf:mapline hgotheb-v V \jf@hgotheb}%  \special{pdf:mapline hmgothr-h H \jf@hmgothr}%  \special{pdf:mapline hmgothr-v V \jf@hmgothr}%  % TEXT, JIS04  \special{pdf:mapline hminln-h H \jf@hminl}%  \special{pdf:mapline hminln-v V \jf@hminl}%  \special{pdf:mapline hminrn-h H \jf@hminr}%  \special{pdf:mapline hminrn-v V \jf@hminr}%  \special{pdf:mapline hminbn-h H \jf@hminb}%  \special{pdf:mapline hminbn-v V \jf@hminb}%  \special{pdf:mapline hgothrn-h H \jf@hgothr}%  \special{pdf:mapline hgothrn-v V \jf@hgothr}%  \special{pdf:mapline hgothbn-h H \jf@hgothb}%  \special{pdf:mapline hgothbn-v V \jf@hgothb}%  \special{pdf:mapline hgothebn-h H \jf@hgotheb}%  \special{pdf:mapline hgothebn-v V \jf@hgotheb}%  \special{pdf:mapline hmgothrn-h H \jf@hmgothr}%  \special{pdf:mapline hmgothrn-v V \jf@hmgothr}%  % CID  \special{pdf:mapline otf-cjml-h Identity-H \jf@hminl}%  \special{pdf:mapline otf-cjml-v Identity-V \jf@hminl}%  \special{pdf:mapline otf-cjmr-h Identity-H \jf@hminr/AJ16}%  \special{pdf:mapline otf-cjmr-v Identity-V \jf@hminr/AJ16}%  \special{pdf:mapline otf-cjmb-h Identity-H \jf@hminb/AJ16}%  \special{pdf:mapline otf-cjmb-v Identity-V \jf@hminb/AJ16}%  \special{pdf:mapline otf-cjgr-h Identity-H \jf@hgothr}%  \special{pdf:mapline otf-cjgr-v Identity-V \jf@hgothr}%  \special{pdf:mapline otf-cjgb-h Identity-H \jf@hgothb}%  \special{pdf:mapline otf-cjgb-v Identity-V \jf@hgothb}%  \special{pdf:mapline otf-cjge-h Identity-H \jf@hgotheb/AJ16}%  \special{pdf:mapline otf-cjge-v Identity-V \jf@hgotheb/AJ16}%  \special{pdf:mapline otf-cjmgr-h Identity-H \jf@hmgothr/AJ16}%  \special{pdf:mapline otf-cjmgr-v Identity-V \jf@hmgothr/AJ16}%  % Unicode 90JIS  \special{pdf:mapline otf-ujml-h UniJIS-UTF16-H \jf@hminl}%  \special{pdf:mapline otf-ujml-v UniJIS-UTF16-V \jf@hminl}%  \special{pdf:mapline otf-ujmr-h UniJIS-UTF16-H \jf@hminr}%  \special{pdf:mapline otf-ujmr-v UniJIS-UTF16-V \jf@hminr}%  \special{pdf:mapline otf-ujmb-h UniJIS-UTF16-H \jf@hminb}%  \special{pdf:mapline otf-ujmb-v UniJIS-UTF16-V \jf@hminb}%  \special{pdf:mapline otf-ujgr-h UniJIS-UTF16-H \jf@hgothr}%  \special{pdf:mapline otf-ujgr-v UniJIS-UTF16-V \jf@hgothr}%  \special{pdf:mapline otf-ujgb-h UniJIS-UTF16-H \jf@hgothb}%  \special{pdf:mapline otf-ujgb-v UniJIS-UTF16-V \jf@hgothb}%  \special{pdf:mapline otf-ujge-h UniJIS-UTF16-H \jf@hgotheb}%  \special{pdf:mapline otf-ujge-v UniJIS-UTF16-V \jf@hgotheb}%  \special{pdf:mapline otf-ujmgr-h UniJIS-UTF16-H \jf@hmgothr}%  \special{pdf:mapline otf-ujmgr-v UniJIS-UTF16-V \jf@hmgothr}%  % Unicode JIS04  \special{pdf:mapline otf-ujmln-h UniJIS2004-UTF16-H \jf@hminl}%  \special{pdf:mapline otf-ujmln-v UniJIS2004-UTF16-V \jf@hminl}%  \special{pdf:mapline otf-ujmrn-h UniJIS2004-UTF16-H \jf@hminr}%  \special{pdf:mapline otf-ujmrn-v UniJIS2004-UTF16-V \jf@hminr}%  \special{pdf:mapline otf-ujmbn-h UniJIS2004-UTF16-H \jf@hminb}%  \special{pdf:mapline otf-ujmbn-v UniJIS2004-UTF16-V \jf@hminb}%  \special{pdf:mapline otf-ujgrn-h UniJIS2004-UTF16-H \jf@hgothr}%  \special{pdf:mapline otf-ujgrn-v UniJIS2004-UTF16-V \jf@hgothr}%  \special{pdf:mapline otf-ujgbn-h UniJIS2004-UTF16-H \jf@hgothb}%  \special{pdf:mapline otf-ujgbn-v UniJIS2004-UTF16-V \jf@hgothb}%  \special{pdf:mapline otf-ujgen-h UniJIS2004-UTF16-H \jf@hgotheb}%  \special{pdf:mapline otf-ujgen-v UniJIS2004-UTF16-V \jf@hgotheb}%  \special{pdf:mapline otf-ujmgrn-h UniJIS2004-UTF16-H \jf@hmgothr}%  \special{pdf:mapline otf-ujmgrn-v UniJIS2004-UTF16-V \jf@hmgothr}% }% \if@otf@uplatex \AtBeginDvi{%  % TEXT, 90JIS  \special{pdf:mapline uphminl-h UniJIS-UTF16-H \jf@hminl}%  \special{pdf:mapline uphminl-v UniJIS-UTF16-V \jf@hminl}%  \special{pdf:mapline uphminr-h UniJIS-UTF16-H \jf@hminr}%  \special{pdf:mapline uphminr-v UniJIS-UTF16-V \jf@hminr}%  \special{pdf:mapline uphminb-h UniJIS-UTF16-H \jf@hminb}%  \special{pdf:mapline uphminb-v UniJIS-UTF16-V \jf@hminb}%  \special{pdf:mapline uphgothr-h UniJIS-UTF16-H \jf@hgothr}%  \special{pdf:mapline uphgothr-v UniJIS-UTF16-V \jf@hgothr}%  \special{pdf:mapline uphgothb-h UniJIS-UTF16-H \jf@hgothb}%  \special{pdf:mapline uphgothb-v UniJIS-UTF16-V \jf@hgothb}%  \special{pdf:mapline uphgotheb-h UniJIS-UTF16-H \jf@hgotheb}%  \special{pdf:mapline uphgotheb-v UniJIS-UTF16-V \jf@hgotheb}%  \special{pdf:mapline uphmgothr-h UniJIS-UTF16-H \jf@hmgothr}%  \special{pdf:mapline uphmgothr-v UniJIS-UTF16-V \jf@hmgothr}%  % TEXT, JIS04  \special{pdf:mapline uphminln-h UniJIS2004-UTF16-H \jf@hminl}%  \special{pdf:mapline uphminln-v UniJIS2004-UTF16-V \jf@hminl}%  \special{pdf:mapline uphminrn-h UniJIS2004-UTF16-H \jf@hminr}%  \special{pdf:mapline uphminrn-v UniJIS2004-UTF16-V \jf@hminr}%  \special{pdf:mapline uphminbn-h UniJIS2004-UTF16-H \jf@hminb}%  \special{pdf:mapline uphminbn-v UniJIS2004-UTF16-V \jf@hminb}%  \special{pdf:mapline uphgothrn-h UniJIS2004-UTF16-H \jf@hgothr}%  \special{pdf:mapline uphgothrn-v UniJIS2004-UTF16-V \jf@hgothr}%  \special{pdf:mapline uphgothbn-h UniJIS2004-UTF16-H \jf@hgothb}%  \special{pdf:mapline uphgothbn-v UniJIS2004-UTF16-V \jf@hgothb}%  \special{pdf:mapline uphgothebn-h UniJIS2004-UTF16-H \jf@hgotheb}%  \special{pdf:mapline uphgothebn-v UniJIS2004-UTF16-V \jf@hgotheb}%  \special{pdf:mapline uphmgothrn-h UniJIS2004-UTF16-H \jf@hmgothr}%  \special{pdf:mapline uphmgothrn-v UniJIS2004-UTF16-V \jf@hmgothr}%  }% \fi</description>
    </item>
    
    <item>
      <title>CTANにない欧文フォントをLaTeXにインストールする</title>
      <link>https://qdaibungei.github.io/latex/documents/2019-03-29-font-install/</link>
      <pubDate>Fri, 29 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2019-03-29-font-install/</guid>
      <description>はじめに upLaTeXにおいて、CTANに存在する欧文フォントをインストールするのは容易だ。しかしCTANに存在しないフォントをインストールするのは難しい。
困難の原因は、二つある。第一は、tfmファイルやmapファイルを生成するのが難しいことである。第二は、フォント設定ファイルの作り方が分かりづらいことである。
そこで、備忘録を兼ね、以下にその方法を記す。
一つのウェイトをインストールしてみる tfmなどの生成 フォントの形式は通常、otfやttfなどであるが、TeXはそれらを直接に扱うことができない。そこでtfmファイルなどのフォントファイルを生成する必要がある。面倒だが、フォントごとに別のtfmを生成せねばならない。
tfmを生成するためには「otftotfm」というソフトを使う。otftotfmはふつうTeXをインストールしたときに一緒にインストールされているはずだ。インストールされているかどうかを確認するためには、ターミナルで「otftotfm &amp;ndash;version」と打ち、ヴァージョン情報が返ってくるかどうかを確かめればよい。
さて今回はGoogle Fontsに収録されているJosefin Slabというフォントをインストールしてみよう。まずは、一つのウェイト（Regular）だけをインストールしてみる。
まず作業用ディレクトリを適当に作っておき、そこにJosefinSlab-Regular.ttfを入れておく。ターミナルで作業用ディレクトリに行き、次のコマンドを実行してみよう。
otftotfm --no-type1 --no-dotlessj --mapfile=josefinslab.map -e ec.enc -n josefinslab-regular JosefinSlab-Regular.ttf すると、○○○.tfm、○○○.vf、○○○.map、○○○.encという四種類のファイルが生成されるはずである1。一応、オプションの意味を説明しておこう。
 --no-type1 --no-dotlessjは、「Type 1フォントへの変換を行わない」ということ、らしい。あまり理解できていない。 --mapfile=josefinslab.mapで、mapファイルの指定をする。 -e ec.encは、エンコーディングファイルの指定。ec.encを指定すると、T1エンコーディングになる。ちなみにtexnansi.encを指定するとLY1エンコーディングになる。エンコーディングって何なのかいまいち分かっていないが、私はT1エンコーディングにしておいて困ったことはない。 -n josefinslab-regularは、tfm名の指定。  また、-fkernとすればカーニングの、-fligaとすればリガチャの情報を、tfmに含ませることができる。Josefin Slabにはこれらの機能がなかったから上ではこのオプションをつけていないが、この機能があればつけたほうがよい。otfinfo -f JosefinSlab-Regular.ttfなどとすれば、どのような機能が備わっているかを確認できる。
styファイルの作成 各種ファイルが生成できたならば、すかさず、josefinslab.styという名前でstyファイルを作る。
% % josefinslab.sty % \AtBeginDvi{\special{pdf:mapfile josefinslab.map}}% 先程生成したmapファイルの読み込み \DeclareFontFamily{T1}{josefinslab}{}% TeXファイル内で使うフォント名を設定 \DeclareFontShape{T1}{josefinslab}{m}{n}{&amp;lt;-&amp;gt; josefinslab-regular}{}% 上で設定したフォント名と、先程生成したtfmファイルとを結びつける \endinput インストールできたかを確認 ここまでできたら、ほとんどインストールは完了したと言ってよい（今のままだと、各種ファイルがディレクトリにたくさん散らばっていて、気持ち悪いかもしれないが、この問題は次の節で解決する）。
動作確認のため、作業用ディレクトリにTeXファイルを作って、フォントが埋め込まれるかをチェックしておこう。
\documentclass[uplatex]{jsarticle} \usepackage{josefinslab} \begin{document} \romanfamily{josefinslab}\selectfont This is a test. \end{document} 「This is a test.」がJosefin Slabで表示されたら、ここまでの作業はうまくいったことになる。</description>
    </item>
    
    <item>
      <title>hanmenパッケージを更新した</title>
      <link>https://qdaibungei.github.io/latex/documents/2018-01-18-hanmen/</link>
      <pubDate>Thu, 18 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2018-01-18-hanmen/</guid>
      <description> はじめに hanmenパッケージを一年ぶりくらいに更新した。使いかたはここに記してある。
変更した点  依存パッケージとして必須だったnombre_for_fancyhdr.styは、今回の変更により、必要なくなった。 Wオプションに非整数値を入れることができるようになった。これにより、段間を2.5文字分にするといった組版が可能となった。 Wオプションの挙動変更に伴い、グリッド線を表示するオプションの使いかたが変更された。これまでは\newhanmen{grid}と指定したが、今回から\newhanmen{g=50}というふうに指定する仕様とした。  </description>
    </item>
    
    <item>
      <title>otfパッケージのぶら下げ組をちょっと改良する</title>
      <link>https://qdaibungei.github.io/latex/documents/2018-01-12-burasage/</link>
      <pubDate>Fri, 12 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2018-01-12-burasage/</guid>
      <description> 緒言 本稿は、otfパッケージによるぶら下げ組を改良するための方法を記すものである。
本論 otfパッケージにはburasageオプションがあり、これを利用するとぶら下げ組ができる。
\usepackage[burasage]{otf} しかし、このぶら下げ組にはひとつ問題がある。句読点が行末に来たとき、必ずぶら下げ処理がおこなわれてしまうのである1。
むろん、これはこれでひとつの立派な組版方針である。だが、行長が短いときに強制的にぶら下げ処理がおこなわれてしまうと、字間が開いてしまい、間延びした印象の組みかたになってしまう。よって、われわれとしては、ぶら下げ処理を少し抑制するように修正してみたい。これは、商業出版の本によく見られる組みかたでもある。
そこで、プリアンブルなどに以下のように記述し、\。と\、というマクロを作る。
\if@burasage \def\、{%  \@ifnextchar\par{、}{、\hbox{}}%  }%  \def\。{%  \@ifnextchar\par{。}{。\hbox{}}%  }% \else \def\、{\nobreak\makebox[1zw][l]{、}}%  \def\。{\nobreak\makebox[1zw][l]{。}}% \fi あとは、文章中の句読点すべてを\。および\、で置き換えればよい。すると、burasageオプション時には適度にぶら下げが抑制された組みかたとなる。また、burasageオプションを外したときには、追い出し組となる。
細かい調整 ただし、このままでは句読点と括弧類とが並んだとき、空きが広くなりすぎてしまう。たとえば、\。「のように、句読点の直後に始め括弧が来た場合、\。\&amp;lt;「とする（つまり\&amp;lt;を追加する）ことが必要となる。
句点と鉤括弧の場合だけ考えると、結局、以下のような置換が必要である。
 \。「 → \。\&amp;lt;「 \。」 → 。」 」\。 → 」\&amp;lt;\。  このような置換を、すべての括弧類と句読点との組み合わせを考えて、おこなえばよい。置換作業は手作業だと面倒きわまりないので、PythonなりRubyなりで置換スクリプトを組んで置換するのがよいであろう。
結言 LaTeXのデフォルトは追い込み組であるが、これは商業出版にはあまり見られない。そこで上のような設定をし、ぶら下げ組にするか、追い出し組にするとよいのである。そうすれば、いっそう商業出版に近い組みかたが実現でき、嬉しい気分に浸れることであろう。
 ただし段落末尾はそのかぎりではない。 ↩   </description>
    </item>
    
    <item>
      <title>LaTeXによる小説誌制作のヒント</title>
      <link>https://qdaibungei.github.io/latex/documents/2017-10-12-book-making-hints/</link>
      <pubDate>Thu, 12 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2017-10-12-book-making-hints/</guid>
      <description>緒言 以下では、小説誌制作をLaTeXでおこなう場合のヒントを述べる。
フォントの指定 LaTeXのデフォルトフォントはあまり小説向きではない。そこで以下のように記述しフォントを変更する。
まず日本語フォントであるが、特にこだわりがないならば、とりあえず游明朝にしておくとよい。游明朝を使うには、以下のように書く（以下はuplatexを使うことを前提とした書き方である。いまどきわざわざplatexを使う理由はあるまい）。
% uplatexでA5サイズの本を作る場合のdocumentclassの書きかた \documentclass[a5paper,papersize,uplatex]{jsbook} % 日本語フォントを游明朝にする \usepackage[deluxe,uplatex]{otf} \AtBeginDvi{\special{pdf:mapfile otf-up-yu-win10.map}}% Windows 10以外の場合は適宜変更せよ 欧文フォントも変更しておこう。
% 欧文フォントの変更 \usepackage[scale=1.05]{cochineal}% この欧文フォントはわりと游明朝に合う \usepackage[scale=0.95,defaultsans]{opensans} jdashパッケージ 游明朝だと、ダッシュ――がつながらない。そこでjdashパッケージを導入し、これを使う。jdashパッケージについてはここを参照のこと。
hanmenパッケージの使用 まずhanmenパッケージをダウンロードし、TeXファイルと同じフォルダへ入れる。
そしてプリアンブルに以下を記述する。
% 上のフォント設定をした後に書く \usepackage[Q=13,H=22,W=49,L=21,ko=3.875truemm,te=6.5truemm,footskip=2.47truemm,tate]{hanmen} % ついでに、欧文のベースラインなどを適当に変更しておこう \tbaselineshift=.3zw \kanjiskip=0zw plus .25zw minus .03125zw \xkanjiskip=.25zw plus .25zw minus .0625zw これで厳密な版面の設定が可能となる。厳密というのは、たとえば表と裏とで行が揃っているということである（厳密な設定をしないと、行がズレる。紙を透かして見ると行がズレているかどうか分かる）。
hanmenパッケージの使い方の詳細はこの記事を参照のこと。
\tcyマクロ LaTeXで縦書きをするさい、縦中横には\rensujiを使うよう言われる。しかし\rensujiだと前後のアキがおかしくなる（たとえば、行頭で\rensujiを使うとインデント量が狂う）。そこで\tcy命令を新たに作り、これを使うのがよい。
\usepackage{plext} \makeatletter \chardef\nvlsty@zenkakuSpace=\jis&amp;#34;2121\relax \newcommand{\tcy}[1]{%  \nvlsty@zenkakuSpace\kern-1zw\relax \leavevmode\hbox to 1zw{%  \centering\rensuji*{#1}\relax }\relax \kern-1zw\nvlsty@zenkakuSpace } \makeatother 以上をプリアンブルなどに書いておく。使いかたは至ってかんたんで、\tcy{12}時、のようにすればよい。
禁則処理の設定 縦書きの場合、禁則処理はほどほどに抑制しておくと商業出版物の組版に似せることができる。プリアンブルなどに以下を記述する。
\clubpenalty=0 \widowpenalty=0 \jcharwidowpenalty=0 \displaywidowpenalty=0 \prebreakpenalty\jis&amp;#34;2147=10000 % 5000 ’ \postbreakpenalty\jis&amp;#34;2148=10000 % 5000 “ \prebreakpenalty\jis&amp;#34;2149=10000 % 5000 ” \inhibitxspcode`〒=2 \prebreakpenalty\jis&amp;#34;2133=10000 \prebreakpenalty\jis&amp;#34;2134=10000 \prebreakpenalty\jis&amp;#34;2135=10000 \prebreakpenalty\jis&amp;#34;2136=10000 \prebreakpenalty`ー=0 \prebreakpenalty`ぁ=0 \prebreakpenalty`ぃ=0 \prebreakpenalty`ぅ=0 \prebreakpenalty`ぇ=0 \prebreakpenalty`ぉ=0 \prebreakpenalty`っ=0 \prebreakpenalty`ゃ=0 \prebreakpenalty`ゅ=0 \prebreakpenalty`ょ=0 \prebreakpenalty\jis&amp;#34;246E=0 %ゎ \prebreakpenalty`ァ=0 \prebreakpenalty`ィ=0 \prebreakpenalty`ゥ=0 \prebreakpenalty`ェ=0 \prebreakpenalty`ォ=0 \prebreakpenalty`ッ=0 \prebreakpenalty`ャ=0 \prebreakpenalty`ュ=0 \prebreakpenalty`ョ=0 \prebreakpenalty\jis&amp;#34;256E=0 %ヮ \prebreakpenalty\jis&amp;#34;2575=0 %ヵ \prebreakpenalty\jis&amp;#34;2576=0 %ヶ \prebreakpenalty\jis&amp;#34;2139=0 %々 フッター 以前出した本のフッターの設定はだいたいこんな感じである。</description>
    </item>
    
    <item>
      <title>LaTeXによるPDFの生成と加工</title>
      <link>https://qdaibungei.github.io/latex/documents/2017-09-27-pdfpages/</link>
      <pubDate>Wed, 27 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2017-09-27-pdfpages/</guid>
      <description>緒言 本稿はLaTeXを用いてPDFを生成・加工する方法を示すものである。
Adobeの有料ソフトを使うならばPDF加工は容易であるが、無償のソフトウェアだけを用いてPDFを加工するのは通常難しい。しかし、LaTeXを用いれば無償でかんたんにPDFを加工できる。それを実現するのがpdfpagesパッケージである。
そこで以下ではpdfpagesパッケージの使いかたをかんたんに記すことにする（ただし自分用メモとしての意味合いが強く、きちんとは解説していない）。
pdfpagesパッケージの使いかた 大きさを指定して画像をPDF化する 以下をhoge.texという拡張子で保存し、pdflatex hoge.texとすればhoge.pdfというPDFファイルが生成される。
\documentclass{article} \usepackage{pdfpages} \usepackage[papersize={308.341truemm,216truemm}]{geometry} \begin{document} \includepdf{image.jpg} \end{document} \includepdfという命令で画像ファイルを読み込み、出力しているだけである。geometryパッケージにより画像の縦横の長さを設定することが可能である。
縦横比そのままに画像をPDF化する \documentclass{article} \usepackage{pdfpages} \begin{document} \includepdf[fitpaper]{image.jpg} \end{document} このようにfitpaperオプションつきで画像を読み込むと、画像の縦横比に合わせて用紙サイズが決定される。
PDFファイルの連結 以下はA5サイズの本を作っているとき、左右のページをつなげてA4用紙に出力するやりかたである。デザインを確認したいときなどに有用である。
\documentclass[a4paper,landscape]{article} \usepackage{pdfpages} \begin{document} \includepdf[pages={28,29},nup=2x1]{mybook.pdf} \end{document} pages={28,29}は28～29ページだけを読み込む設定、nupは複数ページを一枚に並べる設定である。nup=2x1は2行×1列で並べるという意味になる。
自炊したPDFファイルの加工と連結 \documentclass{article} \usepackage{pdfpages} \usepackage[a5paper]{geometry} \begin{document} \includepdf[pages=-,scale=1.25,offset=-14mm -23mm]{1.pdf} \includepdf[pages=-,scale=1.25,offset=-14mm -23mm]{2.pdf} \includepdf[pages=-,scale=1.25,offset=-14mm -23mm]{3.pdf} \includepdf[pages=-,scale=1.25,offset=-14mm -23mm]{4.pdf} \includepdf[pages=-,scale=1.25,offset=-14mm -23mm]{5.pdf} \includepdf[pages=-,scale=1.25,offset=-14mm -23mm]{6.pdf} \includepdf[pages=-,scale=1.25,offset=-14mm -23mm]{7.pdf} \end{document}\documentclass{article} \usepackage{pdfpages} \usepackage[a4paper,landscape]{geometry} \newcount\K \newcommand{\createPDF}{%  \K=0 \loop\ifnum\K&amp;lt;134 % while(K&amp;lt;pagecount)  \includepdf[pages=-,scale=1.15,offset=-12mm 2mm]{\the\K.png} \advance\K by 1 % K++  \repeat % end while } \begin{document} \createPDF \end{document} scaleオプションとoffsetオプションを指定してやると周囲の切り落としが可能となる。</description>
    </item>
    
    <item>
      <title>ロゴ作成</title>
      <link>https://qdaibungei.github.io/latex/documents/2017-04-03-logo/</link>
      <pubDate>Mon, 03 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2017-04-03-logo/</guid>
      <description>LaTeXで適当にロゴというかバナーみたいなものを作った。
　ソースは以下。
\documentclass{jsarticle} \usepackage[deluxe,expert]{otf} \usepackage[tate,grid]{hanmen} \usepackage{fbb} \usepackage{tsuku,xsceycmd,vtmacro,pxrubrica} \usepackage[dvipdfmx]{graphicx,xcolor} \begin{document} \definecolor{light-gray}{gray}{0.5} \definecolor{tomato}{HTML}{FF6347} \gyoaki[5] \kanjifamily{tsukumin}\selectfont \ruby[h]{文藝}{ぶん|げい}\ruby[h]{部}{ぶ} \hskip.45zw \tcy{\textcolor{light-gray}{\LaTeX}}\kern-1.2zw{\kanjiseries{bx}\fontsize{5\bQ}{8H}\selectfont\textcolor{tomato}{ラ テ フ}} \hskip.18zw \ruby[h]{研究}{けん|きゆ}\ruby[||-&amp;gt;]{会}{うかい} \end{document}</description>
    </item>
    
    <item>
      <title>hanmenパッケージ</title>
      <link>https://qdaibungei.github.io/latex/documents/2017-02-18-hanmen/</link>
      <pubDate>Sat, 18 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2017-02-18-hanmen/</guid>
      <description>はじめに hanmenパッケージというLaTeXパッケージを作った。ダウンロードはここからできる。
hanmenパッケージとは、版面の設計1を厳密に行うためのパッケージである。たとえば、38字×40行で文書を作りたい、といったときにhanmenパッケージは有用である。
従来、LaTeXでは版面の設計が煩雑であった2。とくに縦組みの場合、geometryパッケージが使えないので厄介である。そこで、縦組みでも版面設計がやりやすいようにと作ったのがhanmenパッケージである。
基本的なアイディアはTomOne氏の『よくわかるLaTeX小説』3による。
なお、2017年2月18日現在、あべのり氏によって開発中のクラスファイルであるjlreq.clsは、従来のクラスファイルより圧倒的に版面設計が行いやすいようになっているようなので、jlreq.clsの安定版がリリースされたあかつきには、hanmenパッケージの存在意義は薄れゆくであろうと思われる。
使い方 基本 基本的な使い方は簡単である。プリアンブルに次のように書き込む。
\usepackage[Q=15,H=24,W=38,L=40]{hanmen} そうすると、
 文字サイズ　15級 行送り　24歯 行長　38字 行数　40行  に設定できる。Q は文字サイズの単位「級」に、H は行送りの単位「歯」に、W はwidthに、L はlinesに由来している。
各種オプション グリッド線を表示させる（gに代入する値は上のWで指定した文字数と同じか、または近い整数値を入れる）。
\usepackage[g=38]{hanmen} 　縦組みにする。
\usepackage[tate]{hanmen} 　ヘッダ・フッタの位置の調整。
\usepackage[headheight=13truemm, headsep=1truemm, footskip=3truemm]{hanmen} 　小口側に寄せる、天側に寄せる。
\usepackage[ko=3truemm]{hanmen}%% 3mm小口寄せ\usepackage[te=4truemm]{hanmen}%% 4mm天寄せ 　文字サイズ単位にQではなくptを使う。
\usepackage[pt]{hanmen} 　このパッケージは新ドキュメントクラスで使うことを想定している。旧ドキュメントクラスで使う場合、オプションを付けないと、文字サイズが正しく設定されない。
\usepackage[jisfontzoom]{hanmen} 提供されるマクロ \newhanmen \newhanmen というマクロが提供される。これは、本文中で、
\newhanmen{Q=11.5,H=19,W=42,L=17} などとすると、文書の途中から基本版面を再設定できるマクロである。上記のオプションはすべてここでも使うことができる。
\hanmenchangedir 本文領域はそのままに、組方向だけ変えたい場合に使えるのが \hanmenchangedir である。本文中、このマクロを記述すると組方向だけが切り替わる。
提供される機能 正確な単位の導入 \bQ および \bbp を導入した。これによって、和文文字に関して、より正確に文字サイズを設定できるようになった。
事情を知らない人には意味が分からないだろうが、LaTeXの文字サイズ単位に関しては複雑な事情があり、そのため上のように新たに単位を導入する必要に迫られるのである。詳しくは、吉永氏によるクラスファイルにおける文字サイズの設定などを参照せよ。
フォントサイズの再定義 hanmenパッケージで \usepackage[Q=13]{hanmen} のように文字サイズを変更した場合、それに伴って \small や \huge といったLaTeXに備わった文字サイズ変更マクロが再定義され、文字サイズや行送りサイズが、商業出版で行われているように0.</description>
    </item>
    
    <item>
      <title>jdashパッケージ</title>
      <link>https://qdaibungei.github.io/latex/documents/2017-02-17-jdash/</link>
      <pubDate>Fri, 17 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2017-02-17-jdash/</guid>
      <description>概要 jdashパッケージというLaTeXパッケージを作った。ダウンロードはここからできる。
jdashというのはjapanese dashの略のつもりである。日本語文に現れる記号ダッシュ ― は、通常何個か並べて一本の線のようにして使うが、フォントによっては一本の線に見えない。一本の線のように見せるには工夫が必要だ。その工夫をパッケージ化したものがjdashパッケージだ。
ところで、人によってはときおり放心状態で「あ～～～」と声にならない声を発したくなることがある。しかしこれでは、波ダッシュ ～ がつながって見えないのでいまいち放心状態であることが伝達されにくい。そこで波線をつなげられるような工夫が必要となる。jdashパッケージでは、その工夫をも盛り込んだ。
使い方 ダッシュ この文章でも使っているようなふつうのダッシュ――あるいはダーシとも言う――を出力するには、\jdash という命令を使う。
\jdash[2] のように数字を与えれば、この例の場合2字分の長さのダッシュが出力される。なお、2字分の長さのダッシュ（倍角ダッシュ）に限り、\―― という命令でも出力可能に設定してある。
デフォルトでは、通常のダッシュ記号 ― を重ねることで一本につながったダッシュを出力するようにしている。このやり方は美文書などでも紹介されている有名なやり方である。
しかしPDFで見たときダブって見える弱点もある。そこでPDFで閲覧するときのために、罫線 ─ を使った表示ができると都合がよい。そこで容易している命令が \jdashstyle である。
\jdashstyle{―} % デフォルト \jdash[3] % ダブったダッシュが出る  \jdashstyle{─} % ダッシュ記号を罫線（U+2500）に変更 \jdash[3] % 罫線で出力される  \jdashstyle{rule} % ダッシュ記号を\ruleで生成されるものに変更 \jdash[3] % \ruleで出力される 波ダッシュ 「あ～～～～」と叫びたいとき、あるいはTeX言語話者らしく「えくすぱんどあふた～～～～！」と叫びたいときには波ダッシュがつながっていると便利だ。そのために \～ という命令を用意してある（wave dashの略のつもり）。\～ という命令を並べれば、波ダッシュ記号 ～ がいくらでもつながる。
えくすぱんどあふた\～\～\～\～\～\～\～！ フォントによっては波線同士の食い込み量がまずくて、うまくつながらないかもしれない。その場合は \wdashKerningAmount{数字} という命令を使う。数字の単位は zw である。
% \wdashKerningAmount{.25} % デフォルト。0.25zw分、波線が食い込む。 \wdashKerningAmount{.261} % 食い込み具合を変更。筑紫明朝はこのくらい食い込ませるとうまく波線がつながる。 なお、一部のライトノベルで使われているような波線 〰 の表示もできる。このために \wdashstyle という命令が容易されている。</description>
    </item>
    
  </channel>
</rss>