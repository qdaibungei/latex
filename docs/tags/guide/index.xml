<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Guide on 文藝部LaTeX研究会</title>
    <link>https://qdaibungei.github.io/latex/tags/guide/</link>
    <description>Recent content in Guide on 文藝部LaTeX研究会</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 14 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://qdaibungei.github.io/latex/tags/guide/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LaTeXによる小説組版法・中級編――ベスト文集制作記録③</title>
      <link>https://qdaibungei.github.io/latex/documents/2019-10-14-latexnovel/</link>
      <pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2019-10-14-latexnovel/</guid>
      <description>前回に引き続き、小説組版の方法を解説していく。今回は、「目次」の作り方である。
目次 目次のデザイン 今回のベスト文集では、目次は下図のようなデザインにした。このデザインは、某小説誌を参考に作った。
ノンブル1のフォントには、源暎ノンブルを使った。たったこれだけの工夫でかなりデザインが引き締まる気がする。
目次のデザイン（見開き版） 見開きで見ると、目次はこんな感じ。目次ページの始まりを示す中扉には、「九大文学＊目次」と書いた。この「九大文学」のフォントは、扉ページと同じく廻想体にしてある。逐一フォントを揃えていくことで本全体に統一感を出すためである。
「九大文学」という文字だけのページ（最後の画像の左側）は、本文の始まりを明示するための中扉。
LaTeXによる目次の作り方（通常時） 通常、LaTeXで目次を生成するには、\tableofcontentsという命令を使うことになっている。
しかし、\tableofcontentsで上のような目次を作るのは結構難しい。なぜならば、第一に、デフォルトの\tableofcontentsでは、著者名と作品名をどちらも出力するということができないからだ（そもそもLaTeXのデフォルトの設定では、複数の著者名を扱うような仕組みがない）。
第二に、\tableofcontentsで出力される目次のレイアウトを変更するのが難しい。\tableofcontentsを再定義してやればいいのだが、\tableofcontentsの元の定義はかなり複雑で、変更が面倒である。
LaTeXによる目次の作り方（私家版） さてそこで私は、\tableofcontentsに代替しうるマクロを別途定義して使っている。そのマクロとは、以下に示すような\Mokujiマクロである。
%% \Mokuji \newcommand{\Mokuji}[3]{%  #1\hskip1zw% 作品名  \textgt{#2}\hskip1zw% 著者名  \rensuji{\pageref{#3}}% ページ数 } このようなマクロを作っておいたうえで、本文内に次のように記述する。
\Mokuji{走れメロス}{太宰治}{dazai}% 目次生成。引数は、\Mokuji{&amp;lt;作品名&amp;gt;}{&amp;lt;著者名&amp;gt;}{&amp;lt;ページ参照用ラベル&amp;gt;}とする。  %  \label{dazai}% 小説開始時点にラベルを張っておく % 以下、小説本文 すると、次のように出力される。
基本的には、このように\Mokujiマクロを何個も使って目次を作ればよい。目次デザインを変えるためには、\Mokujiマクロの定義を適宜変更すればよい。
ベスト文集では、\mokujiを次のように定義して使った。
%% \mokuji \newcommand{\mokuji}[4]{%  \expandafter\ifx#4\relax \leavevmode\hbox to 14zw{}%  \else \leavevmode\hbox to 14zw{\rule[-1zw]{.4pt}{2zw}\kern.5zw\fontsize{12\bQ}{\baselineskip}\selectfont #4\hss}%  \fi \expandafter\ifx#2\relax \else \leavevmode\hbox to 6zw{%  \hss\textgt{\fontsize{12\bQ}{\baselineskip}\selectfont #2}%  }%  \fi \kern.5zw\rule[-1zw]{.4pt}{2zw}\kern.5zw #1 \def\qbook@mkj@page{\pageref{#3}}%  \expandafter\ifx\csname r@#3\endcsname\relax \def\qbook@mkj@page{?</description>
    </item>
    
    <item>
      <title>LaTeXによる小説組版法・中級編――ベスト文集制作記録②</title>
      <link>https://qdaibungei.github.io/latex/documents/2019-10-13-latexnovel/</link>
      <pubDate>Sun, 13 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2019-10-13-latexnovel/</guid>
      <description>前回に引き続き、小説組版の方法を解説していく。今回は、扉ページの作り方である。
扉 扉とは 「扉」とは、表紙をめくって最初にあるページのことである。書籍の題名などを書くページである。今回のベスト文集では、次のような扉を作った。
我ながらシンプルでかっこいい扉である。「九大文学」という文字のフォントは、背表紙に使ったのと同じフォント（廻想体）を使っている。これにより統一感が出て、本全体のデザインのまとまりがよくなったはずである。
ロゴ 扉の左下には、九大文藝部のロゴを配置してある。
このロゴは、かなり昔にデザインされ、部誌で使用されていたものである。一時期このロゴはまったく使用されなくなっていたが、私が再び使い始めた。
今回のベスト文集におけるロゴは、以前のロゴとは少しだけデザインが異なっている。欧文フォントは、以前のロゴとまったく同じもの（Classico）を使用している。だが和文フォントは、本全体の雰囲気に合わせて「廻想体」を選択した（以前のロゴではヒラギノ明朝が使われていた）。
文藝部の遺伝子は、少しずつアップデートされながらも、着実に継承されていく。
LaTeXによる扉の作り方 LaTeXで扉を作るには通常、\title{九大文学}のように本のタイトルを指定し、\maketitleという命令を書き込むことによって扉を生成する。しかしこの方法では、扉ページのレイアウトを変更するのが非常に難しい。具体的には、クラスファイルを編集して\maketitleという命令を定義し直せばよいと思われるが、この方法は余程TeXに習熟している人でない限り実行困難であろう。今回作ったベスト文集のように、扉だけ横書きで、本文は縦書き、といったような複雑なレイアウトにする場合は、特に面倒だと思われる。
そこで、扉を作るにあたっては、実現したいレイアウトを直接LaTeXの文法に従って書くほうが無難である。具体的には、私は以下のように記述して扉を作った（ただし、以下の記述のなかには独自に定義したマクロも多く含まれているので、これをそのままコピペしてもエラーが出るだけである。注意されたい）。
\newhanmenII \newhanmen{tate,te=-2mm} \hanmenchangedir \thispagestyle{empty} \begingroup \vspace*{70mm} {\fontsize{30\bQ}{30H}\gtfamily\ebseries\romanfamily{agencyfb}\romanseries{bx}\selectfont\booktitlename} \leftskip-1zw \vspace{\fill} \parbox{9zw}{%  \begin{center} \fontsize{15\bQ}{16H}\classico \hspace*{0.18em}Kyushu \hspace{0.05em}Univ.\\ \vspace{-.2em}%  \mbox{}\hspace{-1.3zw}{\gtfamily\ebseries\fontsizeX 九州大学文藝部}\\ \vspace{-.1em}%  Literary Club \end{center} } \endgroup 何をやっているかというと、基本的には、「文字の大きさやフォントを切り替えつつ、\vspaceや\hspaceで文字の位置を調整して配置している」ということになる。すなわちWordなどと同じ要領でデザインすればよい。
文字の大きさは、
\fontsize{20Q}{25H}\selectfont のように書けば指定できる。また、フォントの指定をするには
\kanjifamily{hmc}\romanfamily{qag}\selectfont のように書けばよい。フォント指定のマクロには\fontfamilyという命令もあるが、ここでは敢えて\fontfamilyではなく\kanjifamilyと\romanfamilyを使っている。こちらの命令を使えば、和文と欧文でまったく違うフォントを指定することが可能となるので、便利である。
（次回に続く）</description>
    </item>
    
    <item>
      <title>LaTeXによる小説組版法・中級編――ベスト文集制作記録①</title>
      <link>https://qdaibungei.github.io/latex/documents/2019-10-12-latexnovel/</link>
      <pubDate>Sat, 12 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2019-10-12-latexnovel/</guid>
      <description>序 概要 この記事は、LaTeXで小説同人誌を作る方法を解説するものである。以前、初級編を執筆したときに、「中級編をいずれ書くつもりだ」と言いながら、ずっと書くのをサボり続けてきた。そこで今回、中級編を書き起こすことにした。
なおこの記事は、ベスト文集の制作記録を兼ねている。
ベスト文集とは 九大文藝部では、およそ四年に一度の頻度で『九大文学』という名の冊子を刊行することが慣わしとなっている。『九大文学』はいわゆるベスト文集、すなわちこれまで発行してきた部誌のなかから、秀逸と思われる作品を部員の投票によって選出し、一冊の本にまとめた文集である。
先日、2019年度版のベスト文集が発行された。私も編集人の一人として、主に組版に携わらせていただいた。
私はこれまで、長いこと小説同人誌の編集に携わってきた。その活動を通じて、小説同人誌の作り方についてのノウハウが蓄積されてきた。先日発行した2019年度版ベスト文集では、そのノウハウを遺憾なく発揮したつもりである。ベスト文集の制作記録を書くことを通じて、LaTeXによる小説同人誌の制作法を伝えられたらと願う。
表紙データ 表紙 まずは表紙データの作り方から解説していこう。今回は、某君がGIMPで表紙を作ってくれた。英字だけのシンプルでかっこいい素敵な表紙だ。まるでペーパーバックのようである。
さて、このような素敵なデザインの表紙をどうやって作るかであるが、これについては、残念ながら私から伝えられることは何もない。「GIMPやペイントや手書きなどで頑張って作って下さい」と言うほかない。
私から言いたいことは、GIMPなどで作った表紙画像から、どうやって入稿用の表紙データを作るかである。
LaTeXによる表紙データの作り方 表紙データをPDFで入稿するようにと規定している印刷所も多い。つまり入稿するためには、画像をPDF化しなければならないのだ。そこで、今回私はPNG形式の表紙データをLaTeXによってPDF化することにした。
まず、表紙用の画像データをhyosi.pngというファイル名で保存しておくことにする。そして、次のようなTeXファイルを作る。
\documentclass{article} \usepackage{pdfpages} \begin{document} \includepdf[fitpaper]{hyosi.png} \end{document} これをpdfLaTeXで処理すれば、PDF形式の表紙データが得られる。TeXは、画像をPDF化するのにも使えるのだ。便利なものである。
PP加工 印刷所に入稿予約をするとき、表紙に使う紙を選ぶことができる。今回はペルーラ・スノーホワイトを使用した。これは、光を当てるときらきらと輝く紙である。この紙に、オプションとして、マットPP加工を施してもらった。
なるべくPP加工を施してもらうことが大切である。PP加工をしておけば、本同士が擦れても塗料が剥がれることがないし、水にも多少耐性ができて丈夫になるので、PP加工はなるべく印刷所に頼んでやってもらおう。
（次回に続く）</description>
    </item>
    
    <item>
      <title>LaTeXによる小説誌制作のヒント</title>
      <link>https://qdaibungei.github.io/latex/documents/2017-10-12-book-making-hints/</link>
      <pubDate>Thu, 12 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2017-10-12-book-making-hints/</guid>
      <description>緒言 以下では、小説誌制作をLaTeXでおこなう場合のヒントを述べる。
フォントの指定 LaTeXのデフォルトフォントはあまり小説向きではない。そこで以下のように記述しフォントを変更する。
まず日本語フォントであるが、特にこだわりがないならば、とりあえず游明朝にしておくとよい。游明朝を使うには、以下のように書く（以下はuplatexを使うことを前提とした書き方である。いまどきわざわざplatexを使う理由はあるまい）。
% uplatexでA5サイズの本を作る場合のdocumentclassの書きかた \documentclass[a5paper,papersize,uplatex]{jsbook} % 日本語フォントを游明朝にする \usepackage[deluxe,uplatex]{otf} \AtBeginDvi{\special{pdf:mapfile otf-up-yu-win10.map}}% Windows 10以外の場合は適宜変更せよ 欧文フォントも変更しておこう。
% 欧文フォントの変更 \usepackage[scale=1.05]{cochineal}% この欧文フォントはわりと游明朝に合う \usepackage[scale=0.95,defaultsans]{opensans} jdashパッケージ 游明朝だと、ダッシュ――がつながらない。そこでjdashパッケージを導入し、これを使う。jdashパッケージについてはここを参照のこと。
hanmenパッケージの使用 まずhanmenパッケージをダウンロードし、TeXファイルと同じフォルダへ入れる。
そしてプリアンブルに以下を記述する。
% 上のフォント設定をした後に書く \usepackage[Q=13,H=22,W=49,L=21,ko=3.875truemm,te=6.5truemm,footskip=2.47truemm,tate]{hanmen} % ついでに、欧文のベースラインなどを適当に変更しておこう \tbaselineshift=.3zw \kanjiskip=0zw plus .25zw minus .03125zw \xkanjiskip=.25zw plus .25zw minus .0625zw これで厳密な版面の設定が可能となる。厳密というのは、たとえば表と裏とで行が揃っているということである（厳密な設定をしないと、行がズレる。紙を透かして見ると行がズレているかどうか分かる）。
hanmenパッケージの使い方の詳細はこの記事を参照のこと。
\tcyマクロ LaTeXで縦書きをするさい、縦中横には\rensujiを使うよう言われる。しかし\rensujiだと前後のアキがおかしくなる（たとえば、行頭で\rensujiを使うとインデント量が狂う）。そこで\tcy命令を新たに作り、これを使うのがよい。
\usepackage{plext} \makeatletter \chardef\nvlsty@zenkakuSpace=\jis&amp;#34;2121\relax \newcommand{\tcy}[1]{%  \nvlsty@zenkakuSpace\kern-1zw\relax \leavevmode\hbox to 1zw{%  \centering\rensuji*{#1}\relax }\relax \kern-1zw\nvlsty@zenkakuSpace } \makeatother 以上をプリアンブルなどに書いておく。使いかたは至ってかんたんで、\tcy{12}時、のようにすればよい。
禁則処理の設定 縦書きの場合、禁則処理はほどほどに抑制しておくと商業出版物の組版に似せることができる。プリアンブルなどに以下を記述する。
\clubpenalty=0 \widowpenalty=0 \jcharwidowpenalty=0 \displaywidowpenalty=0 \prebreakpenalty\jis&amp;#34;2147=10000 % 5000 ’ \postbreakpenalty\jis&amp;#34;2148=10000 % 5000 “ \prebreakpenalty\jis&amp;#34;2149=10000 % 5000 ” \inhibitxspcode`〒=2 \prebreakpenalty\jis&amp;#34;2133=10000 \prebreakpenalty\jis&amp;#34;2134=10000 \prebreakpenalty\jis&amp;#34;2135=10000 \prebreakpenalty\jis&amp;#34;2136=10000 \prebreakpenalty`ー=0 \prebreakpenalty`ぁ=0 \prebreakpenalty`ぃ=0 \prebreakpenalty`ぅ=0 \prebreakpenalty`ぇ=0 \prebreakpenalty`ぉ=0 \prebreakpenalty`っ=0 \prebreakpenalty`ゃ=0 \prebreakpenalty`ゅ=0 \prebreakpenalty`ょ=0 \prebreakpenalty\jis&amp;#34;246E=0 %ゎ \prebreakpenalty`ァ=0 \prebreakpenalty`ィ=0 \prebreakpenalty`ゥ=0 \prebreakpenalty`ェ=0 \prebreakpenalty`ォ=0 \prebreakpenalty`ッ=0 \prebreakpenalty`ャ=0 \prebreakpenalty`ュ=0 \prebreakpenalty`ョ=0 \prebreakpenalty\jis&amp;#34;256E=0 %ヮ \prebreakpenalty\jis&amp;#34;2575=0 %ヵ \prebreakpenalty\jis&amp;#34;2576=0 %ヶ \prebreakpenalty\jis&amp;#34;2139=0 %々 フッター 以前出した本のフッターの設定はだいたいこんな感じである。</description>
    </item>
    
    <item>
      <title>LaTeXによる小説組版法（初級）</title>
      <link>https://qdaibungei.github.io/latex/documents/2017-02-26-latexnovel/</link>
      <pubDate>Sun, 26 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://qdaibungei.github.io/latex/documents/2017-02-26-latexnovel/</guid>
      <description>この記事は、LaTeXで小説を組版するにはどうすればよいかを具体的に解説するものである。理論的な話は最小限に留め、主として実践的な話題を取り上げる。つまり、具体的にどう手を動かせばLaTeXで小説が組版できるのかを解説する。
コンピュータおよびLaTeXの初心者でも読めるように配慮したつもりだが、LaTeXの知識ゼロだと厳しいかもしれない。
なお、以下の方法はあくまでも初心者向けの簡易的方法であり、私が普段LaTeXで組版している実際の現場の方法とはかなり異なる。
電撃文庫の再現 雛形ファイルの用意 具体例として、LaTeXで電撃文庫のデザインで組版してみよう。といっても商用フォントが手元にない限り完全再現はできないので、大体同じようなデザインを作るだけであるが。
まず、以下を novelstyle.sty という名前で保存する。スタイルファイル内の記述の意味は、一応コメント文で書いておいた。
\NeedsTeXFormat{pLaTeX2e} \ProvidesPackage{novelstyle} \RequirePackage[Q=11.5,H=19,W=42,L=17,te=-2mm,headsep=5mm,tate]{hanmen} \RequirePackage[deluxe,uplatex]{otf} \RequirePackage{plext,pxrubrica}% plextは縦組み時に有用なパッケージ、pxrubricaはルビ振りに必要なパッケージ。  % %% header &amp;amp; footer % % ページ番号を出力するときは\thepageと書く。 \fancyhf{}% ヘッダー・フッターの初期化 \def\nvlsty@nombre{\textit{\thepage}} \def\nvlsty@booktitle{ここにタイトルを書く} \fancyhead[RE]{\vspace*{0pt}\scriptsize\nvlsty@nombre} \fancyhead[LO]{\vspace*{0pt}\footnotesize\nvlsty@nombre\hskip1zw\scriptsize\nvlsty@booktitle} % %% \tcy % % LaTeXの解説書では、縦中横に\rensujiを使うこととされているが、 % \rensujiだと無駄なアキが入ってしまいベタ組みできない。 % そこで、ここでは新たに\tcyを定義する。 \chardef\nvlsty@zenkakuSpace=\jis&amp;#34;2121\relax \def\tcy#1{%  \nvlsty@zenkakuSpace\kern-1zw\relax \leavevmode\hbox to 1zw{%  \centering\rensuji*{#1}%  }%  \kern-1zw\nvlsty@zenkakuSpace } % %% \xobeylines % % これは、空行をあけなくても段落分けできるようにする工夫。 % 本文中、\xobeylinesと書けば、空行をあけなくても段落が変わる。 % \disobeylinesと書けば、LaTeX記法通り、空行をあけないと段落が変わらないようになる。 % ただし、併用するパッケージによってはいろいろ弊害が出る場合があるので、素直に空行によって段落分けしたほうが無難かもしれない。 {\catcode`\^^M=\active \gdef\xobeylines{\catcode`\^^M\active \def^^M{\par\leavevmode}}%  \global\def^^M{\par\leavevmode}% } \def\disobeylines{\catcode`\^^M=5 } \let\disxobeylines=\disobeylines \AtBeginDocument{\xobeylines}%% 本文開始直後から\xobeylinesが適用されるようにする。  % %% 全角アキ % % 疑問符などの後に全角空白文字「　」を使ってアキを作ると、疑問符が行末に来たとき空白が行頭に出てしまって都合が悪い。 % そこで、全角アキは以下のマクロで作る必要がある。 \newcommand{\zenkakuaki}{\hskip1zw plus .</description>
    </item>
    
  </channel>
</rss>